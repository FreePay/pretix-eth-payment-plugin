{"version":3,"file":"web3modal.b5bad16770ff7a2f335b.js","mappings":";2BAMwEA,EAAOC,QAAoS,SAAUC,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAmE,GAAGE,EAAE,OAAOA,EAAEF,GAAE,GAAI,IAAIG,EAAE,IAAIC,MAAM,uBAAuBJ,EAAE,KAAK,MAAOG,EAAEE,KAAK,mBAAoBF,CAAE,CAAC,IAAIG,EAAET,EAAEG,GAAG,CAACN,QAAQ,CAAC,GAAGE,EAAEI,GAAG,GAAGO,KAAKD,EAAEZ,SAAQ,SAASC,GAAoB,OAAOI,EAAlBH,EAAEI,GAAG,GAAGL,IAAgBA,EAAE,GAAEW,EAAEA,EAAEZ,QAAQC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,OAAOD,EAAEG,GAAGN,OAAO,CAA2C,IAA1C,IAAIQ,OAAE,EAA4CF,EAAE,EAAEA,EAAEF,EAAEU,OAAOR,IAAID,EAAED,EAAEE,IAAI,OAAOD,CAAE,CAA5b,CAA8b,CAAC,EAAE,CAAC,SAASU,EAAQhB,EAAOC,IAC70B,SAAWgB,GACX,aACA,IAEIC,EAyCAC,EA3CAC,EAAWH,EAAOI,kBAAoBJ,EAAOK,uBAK/C,GAAIF,EAAU,CACZ,IAAIG,EAAS,EACTC,EAAW,IAAIJ,EAASK,GACxBC,EAAUT,EAAOU,SAASC,eAAe,IAC7CJ,EAASK,QAAQH,EAAS,CACxBI,eAAe,IAEjBZ,EAAgB,WACdQ,EAAQK,KAAQR,IAAWA,EAAS,CACtC,CACF,MAAO,GAAKN,EAAOe,mBAAiD,IAA1Bf,EAAOgB,eAO/Cf,EADS,aAAcD,GAAU,uBAAwBA,EAAOU,SAASO,cAAc,UACvE,WAId,IAAIC,EAAWlB,EAAOU,SAASO,cAAc,UAC7CC,EAASC,mBAAqB,WAC5BX,IAEAU,EAASC,mBAAqB,KAC9BD,EAASE,WAAWC,YAAYH,GAChCA,EAAW,IACb,EACAlB,EAAOU,SAASY,gBAAgBC,YAAYL,EAC9C,EAEgB,WACdM,WAAWhB,EAAU,EACvB,MAxB+E,CAC/E,IAAIiB,EAAU,IAAIzB,EAAOgB,eACzBS,EAAQC,MAAMC,UAAYnB,EAC1BP,EAAgB,WACdwB,EAAQG,MAAMC,YAAY,EAC5B,CACF,CAuBF,IAAIC,EAAQ,GAEZ,SAAStB,IAEP,IAAIhB,EAAGuC,EADP7B,GAAW,EAGX,IADA,IAAI8B,EAAMF,EAAMhC,OACTkC,GAAK,CAIV,IAHAD,EAAWD,EACXA,EAAQ,GACRtC,GAAK,IACIA,EAAIwC,GACXD,EAASvC,KAEXwC,EAAMF,EAAMhC,MACd,CACAI,GAAW,CACb,CAEAnB,EAAOC,QACP,SAAmBiD,GACQ,IAArBH,EAAMI,KAAKD,IAAgB/B,GAC7BD,GAEJ,CAEC,GAAEJ,KAAKsC,UAAuB,IAAX,EAAAC,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,GAAG,EAAE,CAAC,SAASvC,EAAQhB,EAAOC,GACjC,aACA,IAAIuD,EAAYxC,EAAQ,GAGxB,SAASyC,IAAY,CAErB,IAAIC,EAAW,CAAC,EAEZC,EAAW,CAAC,YACZC,EAAY,CAAC,aACbC,EAAU,CAAC,WAIf,SAASC,EAAQC,GACf,GAAwB,mBAAbA,EACT,MAAM,IAAIC,UAAU,+BAEtBZ,KAAKa,MAAQJ,EACbT,KAAKL,MAAQ,GACbK,KAAKc,aAAU,EACXH,IAAaN,GACfU,EAAsBf,KAAMW,EAEhC,CAoBA,SAASK,EAAUC,EAASC,EAAaC,GACvCnB,KAAKiB,QAAUA,EACY,mBAAhBC,IACTlB,KAAKkB,YAAcA,EACnBlB,KAAKoB,cAAgBpB,KAAKqB,oBAEF,mBAAfF,IACTnB,KAAKmB,WAAaA,EAClBnB,KAAKsB,aAAetB,KAAKuB,kBAE7B,CAcA,SAASC,EAAOP,EAASQ,EAAMC,GAC7BtB,GAAU,WACR,IAAIuB,EACJ,IACEA,EAAcF,EAAKC,EACrB,CAAE,MAAO5E,GACP,OAAOwD,EAASsB,OAAOX,EAASnE,EAClC,CACI6E,IAAgBV,EAClBX,EAASsB,OAAOX,EAAS,IAAIL,UAAU,uCAEvCN,EAASuB,QAAQZ,EAASU,EAE9B,GACF,CAiCA,SAASG,EAAQC,GAEf,IAAIC,EAAOD,GAAOA,EAAIC,KACtB,GAAID,IAAuB,iBAARA,GAAmC,mBAARA,IAAuC,mBAATC,EAC1E,OAAO,WACLA,EAAKC,MAAMF,EAAKG,UAClB,CAEJ,CAEA,SAASnB,EAAsBb,EAAMiC,GAEnC,IAAIhE,GAAS,EACb,SAASiE,EAAQV,GACXvD,IAGJA,GAAS,EACTmC,EAASsB,OAAO1B,EAAMwB,GACxB,CAEA,SAASW,EAAUX,GACbvD,IAGJA,GAAS,EACTmC,EAASuB,QAAQ3B,EAAMwB,GACzB,CAMA,IAAIY,EAASC,GAJb,WACEJ,EAASE,EAAWD,EACtB,IAGsB,UAAlBE,EAAOE,QACTJ,EAAQE,EAAOZ,MAEnB,CAEA,SAASa,EAASd,EAAMC,GACtB,IAAIe,EAAM,CAAC,EACX,IACEA,EAAIf,MAAQD,EAAKC,GACjBe,EAAID,OAAS,SACf,CAAE,MAAO1F,GACP2F,EAAID,OAAS,QACbC,EAAIf,MAAQ5E,CACd,CACA,OAAO2F,CACT,CAxJA7F,EAAOC,QAAU6D,EAcjBA,EAAQgC,UAAiB,MAAI,SAAUvB,GACrC,OAAOnB,KAAKgC,KAAK,KAAMb,EACzB,EACAT,EAAQgC,UAAUV,KAAO,SAAUd,EAAaC,GAC9C,GAA2B,mBAAhBD,GAA8BlB,KAAKa,QAAUL,GAChC,mBAAfW,GAA6BnB,KAAKa,QAAUN,EACnD,OAAOP,KAET,IAAIiB,EAAU,IAAIjB,KAAK2C,YAAYtC,GAQnC,OAPIL,KAAKa,QAAUJ,EAEjBe,EAAOP,EADQjB,KAAKa,QAAUL,EAAYU,EAAcC,EAC9BnB,KAAKc,SAE/Bd,KAAKL,MAAMI,KAAK,IAAIiB,EAAUC,EAASC,EAAaC,IAG/CF,CACT,EAYAD,EAAU0B,UAAUtB,cAAgB,SAAUM,GAC5CpB,EAASuB,QAAQ7B,KAAKiB,QAASS,EACjC,EACAV,EAAU0B,UAAUrB,mBAAqB,SAAUK,GACjDF,EAAOxB,KAAKiB,QAASjB,KAAKkB,YAAaQ,EACzC,EACAV,EAAU0B,UAAUpB,aAAe,SAAUI,GAC3CpB,EAASsB,OAAO5B,KAAKiB,QAASS,EAChC,EACAV,EAAU0B,UAAUnB,kBAAoB,SAAUG,GAChDF,EAAOxB,KAAKiB,QAASjB,KAAKmB,WAAYO,EACxC,EAkBApB,EAASuB,QAAU,SAAU3B,EAAMwB,GACjC,IAAIY,EAASC,EAAST,EAASJ,GAC/B,GAAsB,UAAlBY,EAAOE,OACT,OAAOlC,EAASsB,OAAO1B,EAAMoC,EAAOZ,OAEtC,IAAIS,EAAWG,EAAOZ,MAEtB,GAAIS,EACFpB,EAAsBb,EAAMiC,OACvB,CACLjC,EAAKW,MAAQL,EACbN,EAAKY,QAAUY,EAGf,IAFA,IAAIrE,GAAK,EACLwC,EAAMK,EAAKP,MAAMhC,SACZN,EAAIwC,GACXK,EAAKP,MAAMtC,GAAG+D,cAAcM,EAEhC,CACA,OAAOxB,CACT,EACAI,EAASsB,OAAS,SAAU1B,EAAM0C,GAChC1C,EAAKW,MAAQN,EACbL,EAAKY,QAAU8B,EAGf,IAFA,IAAIvF,GAAK,EACLwC,EAAMK,EAAKP,MAAMhC,SACZN,EAAIwC,GACXK,EAAKP,MAAMtC,GAAGiE,aAAasB,GAE7B,OAAO1C,CACT,EAqDAQ,EAAQmB,QACR,SAAiBH,GACf,OAAIA,aAAiB1B,KACZ0B,EAEFpB,EAASuB,QAAQ,IAAI7B,KAAKK,GAAWqB,EAC9C,EAEAhB,EAAQkB,OACR,SAAgBiB,GACd,IAAI5B,EAAU,IAAIjB,KAAKK,GACvB,OAAOC,EAASsB,OAAOX,EAAS4B,EAClC,EAEAnC,EAAQoC,IACR,SAAaC,GACX,IAAI7C,EAAOF,KACX,GAAiD,mBAA7CgD,OAAON,UAAUO,SAASvF,KAAKqF,GACjC,OAAO/C,KAAK4B,OAAO,IAAIhB,UAAU,qBAGnC,IAAIf,EAAMkD,EAASpF,OACfQ,GAAS,EACb,IAAK0B,EACH,OAAOG,KAAK6B,QAAQ,IAQtB,IALA,IAAIqB,EAAS,IAAIC,MAAMtD,GACnBuD,EAAW,EACX/F,GAAK,EACL4D,EAAU,IAAIjB,KAAKK,KAEdhD,EAAIwC,GACXwD,EAAYN,EAAS1F,GAAIA,GAE3B,OAAO4D,EACP,SAASoC,EAAY3B,EAAOrE,GAC1B6C,EAAK2B,QAAQH,GAAOM,MAMpB,SAAwBsB,GACtBJ,EAAO7F,GAAKiG,IACNF,IAAavD,GAAQ1B,IACzBA,GAAS,EACTmC,EAASuB,QAAQZ,EAASiC,GAE9B,IAZyC,SAAUN,GAC5CzE,IACHA,GAAS,EACTmC,EAASsB,OAAOX,EAAS2B,GAE7B,GAQF,CACF,EAEAlC,EAAQ6C,KACR,SAAcR,GACZ,IAAI7C,EAAOF,KACX,GAAiD,mBAA7CgD,OAAON,UAAUO,SAASvF,KAAKqF,GACjC,OAAO/C,KAAK4B,OAAO,IAAIhB,UAAU,qBAGnC,IAakBc,EAbd7B,EAAMkD,EAASpF,OACfQ,GAAS,EACb,IAAK0B,EACH,OAAOG,KAAK6B,QAAQ,IAMtB,IAHA,IAAIxE,GAAK,EACL4D,EAAU,IAAIjB,KAAKK,KAEdhD,EAAIwC,GAIK6B,EAHPqB,EAAS1F,GAIlB6C,EAAK2B,QAAQH,GAAOM,MAAK,SAAUwB,GAC5BrF,IACHA,GAAS,EACTmC,EAASuB,QAAQZ,EAASuC,GAE9B,IAAG,SAAUZ,GACNzE,IACHA,GAAS,EACTmC,EAASsB,OAAOX,EAAS2B,GAE7B,IAZF,OAAO3B,CAcT,CAEA,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASrD,EAAQhB,EAAOC,IACtC,SAAWgB,GACX,aAC8B,mBAAnBA,EAAO6C,UAChB7C,EAAO6C,QAAU9C,EAAQ,GAG1B,GAAEF,KAAKsC,UAAuB,IAAX,EAAAC,EAAyB,EAAAA,EAAyB,oBAATC,KAAuBA,KAAyB,oBAAXC,OAAyBA,OAAS,CAAC,EACrI,EAAE,CAAC,EAAI,IAAI,EAAE,CAAC,SAASvC,EAAQhB,EAAOC,GACtC,aAEA,IAAI4G,EAA4B,mBAAXC,QAAoD,iBAApBA,OAAOC,SAAwB,SAAU5B,GAAO,cAAcA,CAAK,EAAI,SAAUA,GAAO,OAAOA,GAAyB,mBAAX2B,QAAyB3B,EAAIY,cAAgBe,QAAU3B,IAAQ2B,OAAOhB,UAAY,gBAAkBX,CAAK,EA2B3Q,IAAI6B,EAvBJ,WAEI,IACI,GAAyB,oBAAdC,UACP,OAAOA,UAEX,GAA+B,oBAApBC,gBACP,OAAOA,gBAEX,GAA4B,oBAAjBC,aACP,OAAOA,aAEX,GAA0B,oBAAfC,WACP,OAAOA,WAEX,GAA2B,oBAAhBC,YACP,OAAOA,WAEf,CAAE,MAAOnH,GACL,MACJ,CACJ,CAEUoH,GAwCV,SAASC,EAAWC,EAAOC,GAEvBD,EAAQA,GAAS,GACjBC,EAAaA,GAAc,CAAC,EAC5B,IACI,OAAO,IAAIC,KAAKF,EAAOC,EAC3B,CAAE,MAAOvH,GACL,GAAe,cAAXA,EAAEyH,KACF,MAAMzH,EAIV,IAFA,IACI0H,EAAU,IADuB,oBAAhBC,YAA8BA,YAAuC,oBAAlBC,cAAgCA,cAA0C,oBAAnBC,eAAiCA,eAAiBC,mBAExKvH,EAAI,EAAGA,EAAI+G,EAAMzG,OAAQN,GAAK,EACnCmH,EAAQK,OAAOT,EAAM/G,IAEzB,OAAOmH,EAAQM,QAAQT,EAAWU,KACtC,CACJ,CAIuB,oBAAZrE,SAGP9C,EAAQ,GAEZ,IAAIoH,EAAYtE,QAEhB,SAASuE,EAAgBhE,EAASiE,GAC1BA,GACAjE,EAAQe,MAAK,SAAUM,GACnB4C,EAAS,KAAM5C,EACnB,IAAG,SAAUM,GACTsC,EAAStC,EACb,GAER,CAEA,SAASuC,EAAoBlE,EAASiE,EAAUE,GACpB,mBAAbF,GACPjE,EAAQe,KAAKkD,GAGY,mBAAlBE,GACPnE,EAAe,MAAEmE,EAEzB,CAEA,SAASC,EAAaC,GAOlB,MALmB,iBAARA,IACPC,QAAQC,KAAKF,EAAM,2CACnBA,EAAMG,OAAOH,IAGVA,CACX,CAEA,SAASI,IACL,GAAIxD,UAAUvE,QAAqD,mBAApCuE,UAAUA,UAAUvE,OAAS,GACxD,OAAOuE,UAAUA,UAAUvE,OAAS,EAE5C,CAKA,IAAIgI,EAA4B,mCAC5BC,OAAgB,EAChBC,EAAa,CAAC,EACd5C,EAAWD,OAAON,UAAUO,SAG5B6C,EAAY,WACZC,EAAa,YAOjB,SAASC,EAAwBC,GAI7B,IAHA,IAAItI,EAASsI,EAAItI,OACbuI,EAAM,IAAIC,YAAYxI,GACtByI,EAAM,IAAIC,WAAWH,GAChB7I,EAAI,EAAGA,EAAIM,EAAQN,IACxB+I,EAAI/I,GAAK4I,EAAIK,WAAWjJ,GAE5B,OAAO6I,CACX,CA2CA,SAASK,EAAkB3C,GACvB,MAA6B,kBAAlBgC,EACAZ,EAAUnD,QAAQ+D,GA5BjC,SAAyChC,GACrC,OAAO,IAAIoB,GAAU,SAAUnD,GAC3B,IAAI2E,EAAM5C,EAAI6C,YAAYd,EAA2BI,GACjDW,EAAOvC,EAAW,CAAC,KACvBqC,EAAIG,YAAYhB,GAA2BiB,IAAIF,EAAM,OAErDF,EAAIK,QAAU,SAAU/J,GAGpBA,EAAEgK,iBACFhK,EAAEiK,kBACFlF,GAAQ,EACZ,EAEA2E,EAAIQ,WAAa,WACb,IAAIC,EAAgBC,UAAUC,UAAUC,MAAM,iBAC1CC,EAAcH,UAAUC,UAAUC,MAAM,UAG5CvF,EAAQwF,IAAgBJ,GAAiBK,SAASL,EAAc,GAAI,KAAO,GAC/E,CACJ,IAAU,OAAE,WACR,OAAO,CACX,GACJ,CAMWM,CAAgC3D,GAAK5B,MAAK,SAAUN,GAEvD,OADAkE,EAAgBlE,CAEpB,GACJ,CAEA,SAAS8F,EAAgBC,GACrB,IAAIC,EAAY7B,EAAW4B,EAAOlD,MAG9BoD,EAAoB,CAAC,EAEzBA,EAAkB1G,QAAU,IAAI+D,GAAU,SAAUnD,EAASD,GACzD+F,EAAkB9F,QAAUA,EAC5B8F,EAAkB/F,OAASA,CAC/B,IAGA8F,EAAUE,mBAAmB7H,KAAK4H,GAG7BD,EAAUG,QAGXH,EAAUG,QAAUH,EAAUG,QAAQ7F,MAAK,WACvC,OAAO2F,EAAkB1G,OAC7B,IAJAyG,EAAUG,QAAUF,EAAkB1G,OAM9C,CAEA,SAAS6G,EAAkBL,GACvB,IAGIE,EAHY9B,EAAW4B,EAAOlD,MAGAqD,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB9F,UACX8F,EAAkB1G,OAEjC,CAEA,SAAS+G,EAAiBP,EAAQQ,GAC9B,IAGIN,EAHY9B,EAAW4B,EAAOlD,MAGAqD,mBAAmBG,MAIrD,GAAIJ,EAEA,OADAA,EAAkB/F,OAAOqG,GAClBN,EAAkB1G,OAEjC,CAEA,SAASiH,EAAeT,EAAQU,GAC5B,OAAO,IAAInD,GAAU,SAAUnD,EAASD,GAGpC,GAFAiE,EAAW4B,EAAOlD,MAAQsB,EAAW4B,EAAOlD,OA6NzC,CAEH6D,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAnOhBH,EAAOY,GAAI,CACX,IAAIF,EAIA,OAAOtG,EAAQ4F,EAAOY,IAHtBb,EAAgBC,GAChBA,EAAOY,GAAGC,OAIlB,CAEA,IAAIC,EAAS,CAACd,EAAOlD,MAEjB4D,GACAI,EAAOxI,KAAK0H,EAAOe,SAGvB,IAAIC,EAAU7E,EAAI8E,KAAKzG,MAAM2B,EAAK2E,GAE9BJ,IACAM,EAAQE,gBAAkB,SAAU7L,GAChC,IAAIuL,EAAKI,EAAQnG,OACjB,IACI+F,EAAGO,kBAAkBnB,EAAOoB,WACxB/L,EAAEgM,YAAc,GAEhBT,EAAGO,kBAAkBjD,EAE7B,CAAE,MAAOoD,GACL,GAAgB,oBAAZA,EAAGxE,KAGH,MAAMwE,EAFNxD,QAAQC,KAAK,iBAAmBiC,EAAOlD,KAA1B,oCAA4EzH,EAAEgM,WAAa,eAAiBhM,EAAEkM,WAAa,sBAAwBvB,EAAOoB,UAAY,oBAI3L,CACJ,GAGJJ,EAAQQ,QAAU,SAAUnM,GACxBA,EAAEgK,iBACFlF,EAAO6G,EAAQ7F,MACnB,EAEA6F,EAAQS,UAAY,WAChB,IAAIb,EAAKI,EAAQnG,OACjB+F,EAAGc,gBAAkB,SAAUrM,GAM3BA,EAAEsM,OAAOd,OACb,EACAzG,EAAQwG,GACRP,EAAkBL,EACtB,CACJ,GACJ,CAEA,SAAS4B,EAAuB5B,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS6B,EAAuB7B,GAC5B,OAAOS,EAAeT,GAAQ,EAClC,CAEA,SAAS8B,EAAiB9B,EAAQ+B,GAC9B,IAAK/B,EAAOY,GACR,OAAO,EAGX,IAAIoB,GAAchC,EAAOY,GAAGqB,iBAAiBC,SAASlC,EAAOoB,WACzDe,EAAcnC,EAAOe,QAAUf,EAAOY,GAAGG,QACzCqB,EAAYpC,EAAOe,QAAUf,EAAOY,GAAGG,QAY3C,GAVIoB,IAGInC,EAAOe,UAAYgB,GACnBjE,QAAQC,KAAK,iBAAmBiC,EAAOlD,KAA1B,uCAA8EkD,EAAOY,GAAGG,QAAU,eAAiBf,EAAOe,QAAU,KAGrJf,EAAOe,QAAUf,EAAOY,GAAGG,SAG3BqB,GAAaJ,EAAY,CAIzB,GAAIA,EAAY,CACZ,IAAIK,EAAarC,EAAOY,GAAGG,QAAU,EACjCsB,EAAarC,EAAOe,UACpBf,EAAOe,QAAUsB,EAEzB,CAEA,OAAO,CACX,CAEA,OAAO,CACX,CAoBA,SAASC,EAAYC,GAEjB,OAAO7F,EAAW,CADF6B,EAAwBiE,KAAKD,EAAYrL,QAC1B,CAAEoG,KAAMiF,EAAYjF,MACvD,CAGA,SAASmF,EAAexI,GACpB,OAAOA,GAASA,EAAMyI,2BAC1B,CAMA,SAASC,EAAYlF,GACjB,IAAIhF,EAAOF,KAEPiB,EAAUf,EAAKmK,aAAarI,MAAK,WACjC,IAAI0F,EAAY7B,EAAW3F,EAAKoK,QAAQ/F,MAExC,GAAImD,GAAaA,EAAUG,QACvB,OAAOH,EAAUG,OAEzB,IAGA,OADA1C,EAAoBlE,EAASiE,EAAUA,GAChCjE,CACX,CA0CA,SAASsJ,EAAkB9C,EAAQ+C,EAAMtF,EAAUuF,QAC/BC,IAAZD,IACAA,EAAU,GAGd,IACI,IAAIE,EAAKlD,EAAOY,GAAG5B,YAAYgB,EAAOoB,UAAW2B,GACjDtF,EAAS,KAAMyF,EACnB,CAAE,MAAO1C,GACL,GAAIwC,EAAU,KAAOhD,EAAOY,IAAmB,sBAAbJ,EAAI1D,MAA6C,kBAAb0D,EAAI1D,MACtE,OAAOS,EAAUnD,UAAUG,MAAK,WAC5B,IAAKyF,EAAOY,IAAmB,kBAAbJ,EAAI1D,OAA6BkD,EAAOY,GAAGqB,iBAAiBC,SAASlC,EAAOoB,YAAcpB,EAAOe,SAAWf,EAAOY,GAAGG,QAMpI,OAJIf,EAAOY,KACPZ,EAAOe,QAAUf,EAAOY,GAAGG,QAAU,GAGlCc,EAAuB7B,EAEtC,IAAGzF,MAAK,WACJ,OAzDhB,SAAuByF,GACnBD,EAAgBC,GAKhB,IAHA,IAAIC,EAAY7B,EAAW4B,EAAOlD,MAC9B6D,EAAUV,EAAUU,QAEf/K,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IAAK,CACrC,IAAIuN,EAASxC,EAAQ/K,GACjBuN,EAAON,QAAQjC,KACfuC,EAAON,QAAQjC,GAAGC,QAClBsC,EAAON,QAAQjC,GAAK,KAE5B,CAGA,OAFAZ,EAAOY,GAAK,KAELgB,EAAuB5B,GAAQzF,MAAK,SAAUqG,GAEjD,OADAZ,EAAOY,GAAKA,EACRkB,EAAiB9B,GAEV6B,EAAuB7B,GAE3BY,CACX,IAAGrG,MAAK,SAAUqG,GAGdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3B,IAAK,IAAIhL,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IAChC+K,EAAQ/K,GAAGiN,QAAQjC,GAAKA,CAEhC,IAAU,OAAE,SAAUJ,GAElB,MADAD,EAAiBP,EAAQQ,GACnBA,CACV,GACJ,CAwBuB4C,CAAcpD,GAAQzF,MAAK,WAC9BuI,EAAkB9C,EAAQ+C,EAAMtF,EAAUuF,EAAU,EACxD,GACJ,IAAU,MAAEvF,GAGhBA,EAAS+C,EACb,CACJ,CA6lBA,IAAI6C,EAAe,CACfC,QAAS,eACTC,aA9kBJ,SAAsBC,GAClB,IAAI/K,EAAOF,KACPyH,EAAS,CACTY,GAAI,MAGR,GAAI4C,EACA,IAAK,IAAI5N,KAAK4N,EACVxD,EAAOpK,GAAK4N,EAAQ5N,GAK5B,IAAIqK,EAAY7B,EAAW4B,EAAOlD,MAG7BmD,IACDA,EA/BG,CAEHU,QAAS,GAETC,GAAI,KAEJR,QAAS,KAETD,mBAAoB,IAyBpB/B,EAAW4B,EAAOlD,MAAQmD,GAI9BA,EAAUU,QAAQrI,KAAKG,GAGlBA,EAAKmK,aACNnK,EAAKmK,WAAanK,EAAKgL,MACvBhL,EAAKgL,MAAQd,GAIjB,IAAIe,EAAe,GAEnB,SAASC,IAGL,OAAOpG,EAAUnD,SACrB,CAEA,IAAK,IAAIwJ,EAAI,EAAGA,EAAI3D,EAAUU,QAAQzK,OAAQ0N,IAAK,CAC/C,IAAIT,EAASlD,EAAUU,QAAQiD,GAC3BT,IAAW1K,GAEXiL,EAAapL,KAAK6K,EAAOP,aAAoB,MAAEe,GAEvD,CAGA,IAAIhD,EAAUV,EAAUU,QAAQkD,MAAM,GAItC,OAAOtG,EAAUlC,IAAIqI,GAAcnJ,MAAK,WAGpC,OAFAyF,EAAOY,GAAKX,EAAUW,GAEfgB,EAAuB5B,EAClC,IAAGzF,MAAK,SAAUqG,GAEd,OADAZ,EAAOY,GAAKA,EACRkB,EAAiB9B,EAAQvH,EAAKqL,eAAe/C,SAEtCc,EAAuB7B,GAE3BY,CACX,IAAGrG,MAAK,SAAUqG,GACdZ,EAAOY,GAAKX,EAAUW,GAAKA,EAC3BnI,EAAKoK,QAAU7C,EAEf,IAAK,IAAI+D,EAAI,EAAGA,EAAIpD,EAAQzK,OAAQ6N,IAAK,CACrC,IAAIZ,EAASxC,EAAQoD,GACjBZ,IAAW1K,IAEX0K,EAAON,QAAQjC,GAAKZ,EAAOY,GAC3BuC,EAAON,QAAQ9B,QAAUf,EAAOe,QAExC,CACJ,GACJ,EAkgBIiD,SApiCJ,WACI,IAGI,IAAK7H,IAAQA,EAAI8E,KACb,OAAO,EAMX,IAAIgD,EAAmC,oBAAjBC,cAAgC,4BAA4BC,KAAK1E,UAAUC,aAAe,SAASyE,KAAK1E,UAAUC,aAAe,aAAayE,KAAK1E,UAAU2E,UAE/KC,EAA4B,mBAAVC,QAAsE,IAA9CA,MAAM9I,WAAW+I,QAAQ,gBAQvE,QAASN,GAAYI,IAAkC,oBAAdjI,WAKlB,oBAAhBoI,WACX,CAAE,MAAOnP,GACL,OAAO,CACX,CACJ,CAsgCcoP,GACVC,QAvdJ,SAAiBxI,EAAUuB,GACvB,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASxE,GAAW,SAAUmC,EAAKxB,GACtD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IACImE,EADQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WACjCwD,aACZC,EAAkB,EAEtBF,EAAIlD,UAAY,WACZ,IAAIqD,EAASH,EAAI9J,OAEjB,GAAIiK,EAAQ,CACR,IAAI7K,EAAQ6K,EAAO7K,MACfwI,EAAexI,KACfA,EAAQqI,EAAYrI,IAExB,IAAIY,EAASqB,EAASjC,EAAO6K,EAAOjH,IAAKgH,UAK1B,IAAXhK,EACAT,EAAQS,GAERiK,EAAiB,UAEzB,MACI1K,GAER,EAEAuK,EAAInD,QAAU,WACVrH,EAAOwK,EAAIxJ,MACf,CACJ,CAAE,MAAO9F,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAIA,OAFAqD,EAAgBhE,EAASiE,GAElBjE,CACX,EAqaIuL,QAlgBJ,SAAiBlH,EAAKJ,GAClB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASxE,GAAW,SAAUmC,EAAKxB,GACtD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IACImE,EADQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WACjC4D,IAAInH,GAEpB8G,EAAIlD,UAAY,WACZ,IAAIxH,EAAQ0K,EAAI9J,YACFoI,IAAVhJ,IACAA,EAAQ,MAERwI,EAAexI,KACfA,EAAQqI,EAAYrI,IAExBG,EAAQH,EACZ,EAEA0K,EAAInD,QAAU,WACVrH,EAAOwK,EAAIxJ,MACf,CACJ,CAAE,MAAO9F,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA4dIyL,QApaJ,SAAiBpH,EAAK5D,EAAOwD,GACzB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C,IAAI6F,EACJvH,EAAKgL,QAAQlJ,MAAK,WAEd,OADAyF,EAASvH,EAAKoK,QACe,kBAAzBrH,EAASvF,KAAKgE,GACP6E,EAAkBkB,EAAOY,IAAIrG,MAAK,SAAU2K,GAC/C,OAAIA,EACOjL,GA7TVgF,EA+TkBhF,EA9T5B,IAAIsD,GAAU,SAAUnD,EAASD,GACpC,IAAIgL,EAAS,IAAIC,WACjBD,EAAO3D,QAAUrH,EACjBgL,EAAOE,UAAY,SAAUhQ,GACzB,IAAIiQ,EAASC,KAAKlQ,EAAEsM,OAAO9G,QAAU,IACrCT,EAAQ,CACJsI,6BAA6B,EAC7BxL,KAAMoO,EACNhI,KAAM2B,EAAK3B,MAEnB,EACA6H,EAAOK,mBAAmBvG,EAC9B,KAbJ,IAAqBA,CAgUL,IAEGhF,CACX,IAAGM,MAAK,SAAUN,GACd6I,EAAkBrK,EAAKoK,QAASvE,GAAY,SAAUkC,EAAKxB,GACvD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IAAIiF,EAAQzG,EAAYE,YAAYzG,EAAKoK,QAAQzB,WAMnC,OAAVnH,IACAA,OAAQgJ,GAGZ,IAAI0B,EAAMc,EAAMtG,IAAIlF,EAAO4D,GAE3BmB,EAAYO,WAAa,gBAOP0D,IAAVhJ,IACAA,EAAQ,MAGZG,EAAQH,EACZ,EACA+E,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAMmE,EAAIxJ,MAAQwJ,EAAIxJ,MAAQwJ,EAAI3F,YAAY7D,MAClDhB,EAAOqG,EACX,CACJ,CAAE,MAAOnL,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAsWIkM,WApWJ,SAAoB7H,EAAKJ,GACrB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASvE,GAAY,SAAUkC,EAAKxB,GACvD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IAMImE,EANQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WAMzB,OAAEvD,GAC1BmB,EAAYO,WAAa,WACrBnF,GACJ,EAEA4E,EAAYwC,QAAU,WAClBrH,EAAOwK,EAAIxJ,MACf,EAIA6D,EAAYI,QAAU,WAClB,IAAIoB,EAAMmE,EAAIxJ,MAAQwJ,EAAIxJ,MAAQwJ,EAAI3F,YAAY7D,MAClDhB,EAAOqG,EACX,CACJ,CAAE,MAAOnL,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA0TImM,MAxTJ,SAAelI,GACX,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASvE,GAAY,SAAUkC,EAAKxB,GACvD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IACImE,EADQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WACjCuE,QAEhB3G,EAAYO,WAAa,WACrBnF,GACJ,EAEA4E,EAAYI,QAAUJ,EAAYwC,QAAU,WACxC,IAAIhB,EAAMmE,EAAIxJ,MAAQwJ,EAAIxJ,MAAQwJ,EAAI3F,YAAY7D,MAClDhB,EAAOqG,EACX,CACJ,CAAE,MAAOnL,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA0RItD,OAxRJ,SAAgBuH,GACZ,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASxE,GAAW,SAAUmC,EAAKxB,GACtD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IACImE,EADQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WACjCwE,QAEhBjB,EAAIlD,UAAY,WACZrH,EAAQuK,EAAI9J,OAChB,EAEA8J,EAAInD,QAAU,WACVrH,EAAOwK,EAAIxJ,MACf,CACJ,CAAE,MAAO9F,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA2PIqE,IAzPJ,SAAatI,EAAGkI,GACZ,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GACvC5E,EAAI,EACJ6E,EAAQ,MAKZ3B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASxE,GAAW,SAAUmC,EAAKxB,GACtD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IAAIiF,EAAQzG,EAAYE,YAAYzG,EAAKoK,QAAQzB,WAC7CyE,GAAW,EACXlB,EAAMc,EAAMK,gBAEhBnB,EAAIlD,UAAY,WACZ,IAAIqD,EAASH,EAAI9J,OACZiK,EAOK,IAANvP,GAKKsQ,EAFLzL,EAAQ0K,EAAOjH,MAKXgI,GAAW,EACXf,EAAOiB,QAAQxQ,IAdnB6E,EAAQ,KAoBhB,EAEAuK,EAAInD,QAAU,WACVrH,EAAOwK,EAAIxJ,MACf,CACJ,CAAE,MAAO9F,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA+LIwM,KA7LJ,SAAcvI,GACV,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACduI,EAAkBrK,EAAKoK,QAASxE,GAAW,SAAUmC,EAAKxB,GACtD,GAAIwB,EACA,OAAOrG,EAAOqG,GAGlB,IACI,IACImE,EADQ3F,EAAYE,YAAYzG,EAAKoK,QAAQzB,WACjC0E,gBACZE,EAAO,GAEXrB,EAAIlD,UAAY,WACZ,IAAIqD,EAASH,EAAI9J,OAEZiK,GAKLkB,EAAK1N,KAAKwM,EAAOjH,KACjBiH,EAAiB,YALb1K,EAAQ4L,EAMhB,EAEArB,EAAInD,QAAU,WACVrH,EAAOwK,EAAIxJ,MACf,CACJ,CAAE,MAAO9F,GACL8E,EAAO9E,EACX,CACJ,GACJ,IAAU,MAAE8E,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAuJIyM,aArJJ,SAAsBzC,EAAS/F,GAC3BA,EAAWQ,EAAYzD,MAAMjC,KAAMkC,WAEnC,IAQIjB,EARA0M,EAAgB3N,KAAK4N,SASzB,IARA3C,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1C1G,OACT0G,EAAQ1G,KAAO0G,EAAQ1G,MAAQoJ,EAAcpJ,KAC7C0G,EAAQpC,UAAYoC,EAAQpC,WAAa8E,EAAc9E,WAKtDoC,EAAQ1G,KAEN,CACH,IAEIsJ,EAFc5C,EAAQ1G,OAASoJ,EAAcpJ,MAL1CvE,KAKuDsK,QAAQjC,GAExCrD,EAAUnD,QAPjC7B,KAO8CsK,QAAQjC,IAAMgB,EAAuB4B,GAASjJ,MAAK,SAAUqG,GAC9G,IAAIX,EAAY7B,EAAWoF,EAAQ1G,MAC/B6D,EAAUV,EAAUU,QACxBV,EAAUW,GAAKA,EACf,IAAK,IAAIhL,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IAChC+K,EAAQ/K,GAAGiN,QAAQjC,GAAKA,EAE5B,OAAOA,CACX,IAqDIpH,EAnDCgK,EAAQpC,UAmDCgF,EAAU7L,MAAK,SAAUqG,GAC/B,GAAKA,EAAGqB,iBAAiBC,SAASsB,EAAQpC,WAA1C,CAIA,IAAIG,EAAaX,EAAGG,QAAU,EAE9BhB,EAAgByD,GAEhB,IAAIvD,EAAY7B,EAAWoF,EAAQ1G,MAC/B6D,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAIjL,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IAAK,CACrC,IAAIuN,EAASxC,EAAQ/K,GACrBuN,EAAON,QAAQjC,GAAK,KACpBuC,EAAON,QAAQ9B,QAAUQ,CAC7B,CAEA,IAAI8E,EAAoB,IAAI9I,GAAU,SAAUnD,EAASD,GACrD,IAAIwK,EAAMxI,EAAI8E,KAAKuC,EAAQ1G,KAAMyE,GAEjCoD,EAAInD,QAAU,SAAUhB,GACXmE,EAAI9J,OACVgG,QACH1G,EAAOqG,EACX,EAEAmE,EAAIzD,gBAAkB,WACTyD,EAAI9J,OACVyL,kBAAkB9C,EAAQpC,UACjC,EAEAuD,EAAIlD,UAAY,WACZ,IAAIb,EAAK+D,EAAI9J,OACb+F,EAAGC,QACHzG,EAAQwG,EACZ,CACJ,IAEA,OAAOyF,EAAkB9L,MAAK,SAAUqG,GACpCX,EAAUW,GAAKA,EACf,IAAK,IAAIgD,EAAI,EAAGA,EAAIjD,EAAQzK,OAAQ0N,IAAK,CACrC,IAAI2C,EAAW5F,EAAQiD,GACvB2C,EAAS1D,QAAQjC,GAAKA,EACtBP,EAAkBkG,EAAS1D,QAC/B,CACJ,IAAU,OAAE,SAAUrC,GAElB,MADCD,EAAiBiD,EAAShD,IAAQjD,EAAUnD,WAAkB,OAAE,WAAa,IACxEoG,CACV,GA/CA,CAgDJ,IArGU4F,EAAU7L,MAAK,SAAUqG,GAC/Bb,EAAgByD,GAEhB,IAAIvD,EAAY7B,EAAWoF,EAAQ1G,MAC/B6D,EAAUV,EAAUU,QAExBC,EAAGC,QACH,IAAK,IAAIjL,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IACnB+K,EAAQ/K,GACdiN,QAAQjC,GAAK,KAGxB,IAAI4F,EAAgB,IAAIjJ,GAAU,SAAUnD,EAASD,GACjD,IAAIwK,EAAMxI,EAAIsK,eAAejD,EAAQ1G,MAErC6H,EAAInD,QAAU,WACV,IAAIZ,EAAK+D,EAAI9J,OACT+F,GACAA,EAAGC,QAEP1G,EAAOwK,EAAIxJ,MACf,EAEAwJ,EAAI+B,UAAY,WAGZ5I,QAAQC,KAAK,sCAAwCyF,EAAQ1G,KAAO,0CACxE,EAEA6H,EAAIlD,UAAY,WACZ,IAAIb,EAAK+D,EAAI9J,OACT+F,GACAA,EAAGC,QAEPzG,EAAQwG,EACZ,CACJ,IAEA,OAAO4F,EAAcjM,MAAK,SAAUqG,GAChCX,EAAUW,GAAKA,EACf,IAAK,IAAIhL,EAAI,EAAGA,EAAI+K,EAAQzK,OAAQN,IAEhCyK,EADcM,EAAQ/K,GACIiN,QAElC,IAAU,OAAE,SAAUrC,GAElB,MADCD,EAAiBiD,EAAShD,IAAQjD,EAAUnD,WAAkB,OAAE,WAAa,IACxEoG,CACV,GACJ,GAuDR,MAtHIhH,EAAU+D,EAAUpD,OAAO,qBAyH/B,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,GAwBA,IAAImN,EAAa,mEAGbC,EAAyB,gCAEzBC,EAAoB,YAIpBC,EAAmB,OACnBC,EAAY,OACZC,EAAiB,OACjBC,EAAkB,OAClBC,EAAyB,OACzBC,EAAkB,OAClBC,EAAkB,OAClBC,EAAmB,OACnBC,EAAmB,OACnBC,EAAoB,OACpBC,EAAoB,OAGpBC,EAAalM,OAAON,UAAUO,SAElC,SAASkM,EAAeC,GAEpB,IAEI/R,EAEAgS,EAAUC,EAAUC,EAAUC,EAJ9BC,EAAyC,IAA1BL,EAAiBzR,OAChCkC,EAAMuP,EAAiBzR,OAEvB+R,EAAI,EAG8C,MAAlDN,EAAiBA,EAAiBzR,OAAS,KAC3C8R,IACsD,MAAlDL,EAAiBA,EAAiBzR,OAAS,IAC3C8R,KAIR,IAAIE,EAAS,IAAIxJ,YAAYsJ,GACzBG,EAAQ,IAAIvJ,WAAWsJ,GAE3B,IAAKtS,EAAI,EAAGA,EAAIwC,EAAKxC,GAAK,EACtBgS,EAAWjB,EAAWpC,QAAQoD,EAAiB/R,IAC/CiS,EAAWlB,EAAWpC,QAAQoD,EAAiB/R,EAAI,IACnDkS,EAAWnB,EAAWpC,QAAQoD,EAAiB/R,EAAI,IACnDmS,EAAWpB,EAAWpC,QAAQoD,EAAiB/R,EAAI,IAGnDuS,EAAMF,KAAOL,GAAY,EAAIC,GAAY,EACzCM,EAAMF,MAAmB,GAAXJ,IAAkB,EAAIC,GAAY,EAChDK,EAAMF,MAAmB,EAAXH,IAAiB,EAAe,GAAXC,EAEvC,OAAOG,CACX,CAIA,SAASE,EAAeF,GAEpB,IAEItS,EAFAuS,EAAQ,IAAIvJ,WAAWsJ,GACvBG,EAAe,GAGnB,IAAKzS,EAAI,EAAGA,EAAIuS,EAAMjS,OAAQN,GAAK,EAE/ByS,GAAgB1B,EAAWwB,EAAMvS,IAAM,GACvCyS,GAAgB1B,GAAuB,EAAXwB,EAAMvS,KAAW,EAAIuS,EAAMvS,EAAI,IAAM,GACjEyS,GAAgB1B,GAA2B,GAAfwB,EAAMvS,EAAI,KAAY,EAAIuS,EAAMvS,EAAI,IAAM,GACtEyS,GAAgB1B,EAA0B,GAAfwB,EAAMvS,EAAI,IASzC,OANIuS,EAAMjS,OAAS,GAAM,EACrBmS,EAAeA,EAAaC,UAAU,EAAGD,EAAanS,OAAS,GAAK,IAC7DiS,EAAMjS,OAAS,GAAM,IAC5BmS,EAAeA,EAAaC,UAAU,EAAGD,EAAanS,OAAS,GAAK,MAGjEmS,CACX,CAwIA,IAAIE,EAAwB,CACxBC,UApIJ,SAAmBvO,EAAOwD,GACtB,IAAIgL,EAAY,GAShB,GARIxO,IACAwO,EAAYhB,EAAWxR,KAAKgE,IAO5BA,IAAwB,yBAAdwO,GAAwCxO,EAAMiO,QAA4C,yBAAlCT,EAAWxR,KAAKgE,EAAMiO,SAAqC,CAG7H,IAAIA,EACAQ,EAAS7B,EAET5M,aAAiByE,aACjBwJ,EAASjO,EACTyO,GAAU5B,IAEVoB,EAASjO,EAAMiO,OAEG,uBAAdO,EACAC,GAAU1B,EACW,wBAAdyB,EACPC,GAAUzB,EACW,+BAAdwB,EACPC,GAAUxB,EACW,wBAAduB,EACPC,GAAUvB,EACW,yBAAdsB,EACPC,GAAUrB,EACW,wBAAdoB,EACPC,GAAUtB,EACW,yBAAdqB,EACPC,GAAUpB,EACW,0BAAdmB,EACPC,GAAUnB,EACW,0BAAdkB,EACPC,GAAUlB,EAEV/J,EAAS,IAAI3H,MAAM,wCAI3B2H,EAASiL,EAASN,EAAeF,GACrC,MAAO,GAAkB,kBAAdO,EAA+B,CAEtC,IAAIE,EAAa,IAAIvD,WAErBuD,EAAWC,OAAS,WAEhB,IAAIC,EAtIO,uBAsIkB5O,EAAMqD,KAAO,IAAM8K,EAAe7P,KAAKsC,QAEpE4C,EAASoJ,EAAoBE,EAAY8B,EAC7C,EAEAF,EAAWG,kBAAkB7O,EACjC,MACI,IACIwD,EAASsL,KAAKC,UAAU/O,GAC5B,CAAE,MAAO5E,GACLyI,QAAQ3C,MAAM,8CAA+ClB,GAE7DwD,EAAS,KAAMpI,EACnB,CAER,EAkEI4T,YAxDJ,SAAqBhP,GAIjB,GAAIA,EAAMqO,UAAU,EA/JOzB,KA+J0BA,EACjD,OAAOkC,KAAKG,MAAMjP,GAMtB,IAGIkP,EAHAxB,EAAmB1N,EAAMqO,UAxJGc,IAyJ5B9L,EAAOrD,EAAMqO,UAvKUzB,EAcKuC,IA8JhC,GAAI9L,IAASyJ,GAAaH,EAAuBzC,KAAKwD,GAAmB,CACrE,IAAI0B,EAAU1B,EAAiBhI,MAAMiH,GACrCuC,EAAWE,EAAQ,GACnB1B,EAAmBA,EAAiBW,UAAUe,EAAQ,GAAGnT,OAC7D,CACA,IAAIgS,EAASR,EAAeC,GAI5B,OAAQrK,GACJ,KAAKwJ,EACD,OAAOoB,EACX,KAAKnB,EACD,OAAOrK,EAAW,CAACwL,GAAS,CAAE5K,KAAM6L,IACxC,KAAKnC,EACD,OAAO,IAAIsC,UAAUpB,GACzB,KAAKjB,EACD,OAAO,IAAIrI,WAAWsJ,GAC1B,KAAKhB,EACD,OAAO,IAAIqC,kBAAkBrB,GACjC,KAAKf,EACD,OAAO,IAAIqC,WAAWtB,GAC1B,KAAKb,EACD,OAAO,IAAIoC,YAAYvB,GAC3B,KAAKd,EACD,OAAO,IAAIsC,WAAWxB,GAC1B,KAAKZ,EACD,OAAO,IAAIqC,YAAYzB,GAC3B,KAAKX,EACD,OAAO,IAAIqC,aAAa1B,GAC5B,KAAKV,EACD,OAAO,IAAIqC,aAAa3B,GAC5B,QACI,MAAM,IAAIpS,MAAM,gBAAkBwH,GAE9C,EAKIoK,eAAgBA,EAChBU,eAAgBA,GAapB,SAAS0B,EAAcxU,EAAG0K,EAAQvC,EAAUE,GACxCrI,EAAEyU,WAAW,8BAAgC/J,EAAOoB,UAAvC,+CAAwG,GAAI3D,EAAUE,EACvI,CAwCA,SAASqM,EAAc1U,EAAG0K,EAAQiK,EAAcC,EAAMzM,EAAUE,GAC5DrI,EAAEyU,WAAWE,EAAcC,EAAMzM,GAAU,SAAUnI,EAAG6F,GAChDA,EAAMpF,OAASoF,EAAMgP,WACrB7U,EAAEyU,WAAW,iEAAuE,CAAC/J,EAAOoB,YAAY,SAAU9L,EAAG8U,GAC5GA,EAAQC,KAAKnU,OAOdyH,EAAcrI,EAAG6F,GAJjB2O,EAAcxU,EAAG0K,GAAQ,WACrB1K,EAAEyU,WAAWE,EAAcC,EAAMzM,EAAUE,EAC/C,GAAGA,EAIX,GAAGA,GAEHA,EAAcrI,EAAG6F,EAEzB,GAAGwC,EACP,CA4EA,SAAS2M,EAASzM,EAAK5D,EAAOwD,EAAU8M,GACpC,IAAI9R,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,gBAIA0I,IAAVhJ,IACAA,EAAQ,MAIZ,IAAIuQ,EAAgBvQ,EAEhB+F,EAASvH,EAAKoK,QAClB7C,EAAOyK,WAAWjC,UAAUvO,GAAO,SAAUA,EAAOkB,GAC5CA,EACAhB,EAAOgB,GAEP6E,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,0BAA4BA,EAAOoB,UAAnC,8BAAmF,CAACvD,EAAK5D,IAAQ,WACtHG,EAAQoQ,EACZ,IAAG,SAAUlV,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,IAAG,SAAUuP,GAGT,GAAIA,EAAS3U,OAAS2U,EAASC,UAAW,CAQtC,GAAIJ,EAAc,EAEd,YADAnQ,EAAQkQ,EAAS9P,MAAM/B,EAAM,CAACoF,EAAK2M,EAAe/M,EAAU8M,EAAc,KAG9EpQ,EAAOuQ,EACX,CACJ,GAER,GACJ,IAAU,MAAEvQ,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,CA4NA,IAAIoR,EAAgB,CAChBtH,QAAS,gBACTC,aArZJ,SAAwBC,GACpB,IAAI/K,EAAOF,KACPyH,EAAS,CACTY,GAAI,MAGR,GAAI4C,EACA,IAAK,IAAI5N,KAAK4N,EACVxD,EAAOpK,GAA2B,iBAAf4N,EAAQ5N,GAAkB4N,EAAQ5N,GAAG4F,WAAagI,EAAQ5N,GAIrF,IAAIiV,EAAgB,IAAItN,GAAU,SAAUnD,EAASD,GAGjD,IACI6F,EAAOY,GAAKsD,aAAalE,EAAOlD,KAAMkB,OAAOgC,EAAOe,SAAUf,EAAO8K,YAAa9K,EAAO+K,KAC7F,CAAE,MAAO1V,GACL,OAAO8E,EAAO9E,EAClB,CAGA2K,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5BwU,EAAcxU,EAAG0K,GAAQ,WACrBvH,EAAKoK,QAAU7C,EACf5F,GACJ,IAAG,SAAU9E,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GAAGhB,EACP,IAGA,OADA6F,EAAOyK,WAAalC,EACbsC,CACX,EAoXI7G,SA1oB+B,mBAAjBE,aA2oBdQ,QAjUJ,SAAmBxI,EAAUuB,GACzB,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAElB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,iBAAmBA,EAAOoB,UAAW,IAAI,SAAU9L,EAAG8U,GAI3E,IAHA,IAAIC,EAAOD,EAAQC,KACfnU,EAASmU,EAAKnU,OAETN,EAAI,EAAGA,EAAIM,EAAQN,IAAK,CAC7B,IAAIoV,EAAOX,EAAKW,KAAKpV,GACjBiF,EAASmQ,EAAK/Q,MAYlB,GARIY,IACAA,EAASmF,EAAOyK,WAAWxB,YAAYpO,SAO5B,KAJfA,EAASqB,EAASrB,EAAQmQ,EAAKnN,IAAKjI,EAAI,IAMpC,YADAwE,EAAQS,EAGhB,CAEAT,GACJ,IAAG,SAAU9E,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAwRIuL,QAhWJ,SAAmBlH,EAAKJ,GACpB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,iBAAmBA,EAAOoB,UAAY,yBAA0B,CAACvD,IAAM,SAAUvI,EAAG8U,GACzG,IAAIvP,EAASuP,EAAQC,KAAKnU,OAASkU,EAAQC,KAAKW,KAAK,GAAG/Q,MAAQ,KAI5DY,IACAA,EAASmF,EAAOyK,WAAWxB,YAAYpO,IAG3CT,EAAQS,EACZ,IAAG,SAAUvF,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAqUIyL,QAhOJ,SAAmBpH,EAAK5D,EAAOwD,GAC3B,OAAO6M,EAAS9P,MAAMjC,KAAM,CAACsF,EAAK5D,EAAOwD,EAAU,GACvD,EA+NIiI,WA7NJ,SAAsB7H,EAAKJ,GACvB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,eAAiBA,EAAOoB,UAAY,iBAAkB,CAACvD,IAAM,WAClFzD,GACJ,IAAG,SAAU9E,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA0MImM,MAtMJ,SAAiBlI,GACb,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,eAAiBA,EAAOoB,UAAW,IAAI,WAC5DhH,GACJ,IAAG,SAAU9E,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAqLItD,OAjLJ,SAAkBuH,GACd,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAE5B0U,EAAc1U,EAAG0K,EAAQ,+BAAiCA,EAAOoB,UAAW,IAAI,SAAU9L,EAAG8U,GACzF,IAAIvP,EAASuP,EAAQC,KAAKW,KAAK,GAAGC,EAClC7Q,EAAQS,EACZ,IAAG,SAAUvF,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA8JIqE,IArJJ,SAAetI,EAAGkI,GACd,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,mBAAqBA,EAAOoB,UAAY,wBAAyB,CAAC7L,EAAI,IAAI,SAAUD,EAAG8U,GAC5G,IAAIvP,EAASuP,EAAQC,KAAKnU,OAASkU,EAAQC,KAAKW,KAAK,GAAGnN,IAAM,KAC9DzD,EAAQS,EACZ,IAAG,SAAUvF,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EAmIIwM,KAjIJ,SAAgBvI,GACZ,IAAIhF,EAAOF,KAEPiB,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C1B,EAAKgL,QAAQlJ,MAAK,WACd,IAAIyF,EAASvH,EAAKoK,QAClB7C,EAAOY,GAAG5B,aAAY,SAAU1J,GAC5B0U,EAAc1U,EAAG0K,EAAQ,mBAAqBA,EAAOoB,UAAW,IAAI,SAAU9L,EAAG8U,GAG7E,IAFA,IAAIpE,EAAO,GAEFpQ,EAAI,EAAGA,EAAIwU,EAAQC,KAAKnU,OAAQN,IACrCoQ,EAAK1N,KAAK8R,EAAQC,KAAKW,KAAKpV,GAAGiI,KAGnCzD,EAAQ4L,EACZ,IAAG,SAAU1Q,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,IAAU,MAAEhB,EAChB,IAGA,OADAqD,EAAgBhE,EAASiE,GAClBjE,CACX,EA0GIyM,aA/EJ,SAAwBzC,EAAS/F,GAC7BA,EAAWQ,EAAYzD,MAAMjC,KAAMkC,WAEnC,IAAIyL,EAAgB3N,KAAK4N,UACzB3C,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1C1G,OACT0G,EAAQ1G,KAAO0G,EAAQ1G,MAAQoJ,EAAcpJ,KAC7C0G,EAAQpC,UAAYoC,EAAQpC,WAAa8E,EAAc9E,WAG3D,IACI5H,EADAf,EAAOF,KAsDX,OADAiF,EAhDIhE,EAHCgK,EAAQ1G,KAGC,IAAIS,GAAU,SAAUnD,GAC9B,IAAIwG,EAGAA,EAFA4C,EAAQ1G,OAASoJ,EAAcpJ,KAE1BrE,EAAKoK,QAAQjC,GAEbsD,aAAaV,EAAQ1G,KAAM,GAAI,GAAI,GAGvC0G,EAAQpC,UAIThH,EAAQ,CACJwG,GAAIA,EACJsK,WAAY,CAAC1H,EAAQpC,aAJzBhH,EAjDhB,SAA0BwG,GACtB,OAAO,IAAIrD,GAAU,SAAUnD,EAASD,GACpCyG,EAAG5B,aAAY,SAAU1J,GACrBA,EAAEyU,WAAW,8FAAoG,IAAI,SAAUzU,EAAG8U,GAG9H,IAFA,IAAIc,EAAa,GAERtV,EAAI,EAAGA,EAAIwU,EAAQC,KAAKnU,OAAQN,IACrCsV,EAAW5S,KAAK8R,EAAQC,KAAKW,KAAKpV,GAAGkH,MAGzC1C,EAAQ,CACJwG,GAAIA,EACJsK,WAAYA,GAEpB,IAAG,SAAU5V,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,IAAG,SAAUuP,GACTvQ,EAAOuQ,EACX,GACJ,GACJ,CA4BwBS,CAAiBvK,GAOjC,IAAGrG,MAAK,SAAU6Q,GACd,OAAO,IAAI7N,GAAU,SAAUnD,EAASD,GACpCiR,EAAcxK,GAAG5B,aAAY,SAAU1J,GACnC,SAAS+V,EAAUjK,GACf,OAAO,IAAI7D,GAAU,SAAUnD,EAASD,GACpC7E,EAAEyU,WAAW,wBAA0B3I,EAAW,IAAI,WAClDhH,GACJ,IAAG,SAAU9E,EAAG6F,GACZhB,EAAOgB,EACX,GACJ,GACJ,CAGA,IADA,IAAImQ,EAAa,GACR1V,EAAI,EAAGwC,EAAMgT,EAAcF,WAAWhV,OAAQN,EAAIwC,EAAKxC,IAC5D0V,EAAWhT,KAAK+S,EAAUD,EAAcF,WAAWtV,KAGvD2H,EAAUlC,IAAIiQ,GAAY/Q,MAAK,WAC3BH,GACJ,IAAU,OAAE,SAAU/E,GAClB8E,EAAO9E,EACX,GACJ,IAAG,SAAUqV,GACTvQ,EAAOuQ,EACX,GACJ,GACJ,IA/CUnN,EAAUpD,OAAO,qBAkDNsD,GAClBjE,CACX,GA2BA,SAAS+R,EAAc/H,EAASgI,GAC5B,IAAIC,EAAYjI,EAAQ1G,KAAO,IAK/B,OAHI0G,EAAQpC,YAAcoK,EAAcpK,YACpCqK,GAAajI,EAAQpC,UAAY,KAE9BqK,CACX,CAoBA,SAASC,KACL,OAlBJ,WACI,IAAIC,EAAsB,4BAE1B,IAII,OAHAC,aAAa3G,QAAQ0G,GAAqB,GAC1CC,aAAalG,WAAWiG,IAEjB,CACX,CAAE,MAAOtW,GACL,OAAO,CACX,CACJ,CAOYwW,IAA+BD,aAAa1V,OAAS,CACjE,CA4QA,IAAI4V,GAAsB,CACtBxI,QAAS,sBACTC,aA3QJ,SAAwBC,GACpB,IACIxD,EAAS,CAAC,EACd,GAAIwD,EACA,IAAK,IAAI5N,KAAK4N,EACVxD,EAAOpK,GAAK4N,EAAQ5N,GAM5B,OAFAoK,EAAOyL,UAAYF,EAAc/H,EARtBjL,KAQoCuL,gBAE1C4H,MAVMnT,KAcNsK,QAAU7C,EACfA,EAAOyK,WAAalC,EAEbhL,EAAUnD,WANNmD,EAAUpD,QAOzB,EAyPI6J,SAtTJ,WACI,IACI,MAA+B,oBAAjB4H,cAAgC,YAAaA,gBAEzDA,aAAa3G,OACnB,CAAE,MAAO5P,GACL,OAAO,CACX,CACJ,CA8Sc0W,GACVrH,QAxMJ,SAAmBxI,EAAUuB,GACzB,IAAIhF,EAAOF,KAEPiB,EAAUf,EAAKgL,QAAQlJ,MAAK,WAc5B,IAbA,IAAIyF,EAASvH,EAAKoK,QACd4I,EAAYzL,EAAOyL,UACnBO,EAAkBP,EAAUvV,OAC5BA,EAAS0V,aAAa1V,OAQtB2O,EAAkB,EAEbjP,EAAI,EAAGA,EAAIM,EAAQN,IAAK,CAC7B,IAAIiI,EAAM+N,aAAa/N,IAAIjI,GAC3B,GAA+B,IAA3BiI,EAAI0G,QAAQkH,GAAhB,CAGA,IAAIxR,EAAQ2R,aAAa7G,QAAQlH,GAYjC,GANI5D,IACAA,EAAQ+F,EAAOyK,WAAWxB,YAAYhP,SAK5B,KAFdA,EAAQiC,EAASjC,EAAO4D,EAAIyK,UAAU0D,GAAkBnH,MAGpD,OAAO5K,CAdX,CAgBJ,CACJ,IAGA,OADAuD,EAAgBhE,EAASiE,GAClBjE,CACX,EA+JIuL,QAlOJ,SAAmBlH,EAAKJ,GACpB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAUf,EAAKgL,QAAQlJ,MAAK,WAC5B,IAAIyF,EAASvH,EAAKoK,QACdhI,EAAS+Q,aAAa7G,QAAQ/E,EAAOyL,UAAY5N,GAUrD,OAJIhD,IACAA,EAASmF,EAAOyK,WAAWxB,YAAYpO,IAGpCA,CACX,IAGA,OADA2C,EAAgBhE,EAASiE,GAClBjE,CACX,EA6MIyL,QAnFJ,SAAmBpH,EAAK5D,EAAOwD,GAC3B,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAUf,EAAKgL,QAAQlJ,MAAK,gBAGd0I,IAAVhJ,IACAA,EAAQ,MAIZ,IAAIuQ,EAAgBvQ,EAEpB,OAAO,IAAIsD,GAAU,SAAUnD,EAASD,GACpC,IAAI6F,EAASvH,EAAKoK,QAClB7C,EAAOyK,WAAWjC,UAAUvO,GAAO,SAAUA,EAAOkB,GAChD,GAAIA,EACAhB,EAAOgB,QAEP,IACIyQ,aAAa3G,QAAQjF,EAAOyL,UAAY5N,EAAK5D,GAC7CG,EAAQoQ,EACZ,CAAE,MAAOnV,GAGU,uBAAXA,EAAEyH,MAA4C,+BAAXzH,EAAEyH,MACrC3C,EAAO9E,GAEX8E,EAAO9E,EACX,CAER,GACJ,GACJ,IAGA,OADAmI,EAAgBhE,EAASiE,GAClBjE,CACX,EA6CIkM,WAtGJ,SAAsB7H,EAAKJ,GACvB,IAAIhF,EAAOF,KAEXsF,EAAMD,EAAaC,GAEnB,IAAIrE,EAAUf,EAAKgL,QAAQlJ,MAAK,WAC5B,IAAIyF,EAASvH,EAAKoK,QAClB+I,aAAalG,WAAW1F,EAAOyL,UAAY5N,EAC/C,IAGA,OADAL,EAAgBhE,EAASiE,GAClBjE,CACX,EA2FImM,MA1PJ,SAAiBlI,GACb,IAAIhF,EAAOF,KACPiB,EAAUf,EAAKgL,QAAQlJ,MAAK,WAG5B,IAFA,IAAIkR,EAAYhT,EAAKoK,QAAQ4I,UAEpB7V,EAAIgW,aAAa1V,OAAS,EAAGN,GAAK,EAAGA,IAAK,CAC/C,IAAIiI,EAAM+N,aAAa/N,IAAIjI,GAEI,IAA3BiI,EAAI0G,QAAQkH,IACZG,aAAalG,WAAW7H,EAEhC,CACJ,IAGA,OADAL,EAAgBhE,EAASiE,GAClBjE,CACX,EA2OItD,OAnHJ,SAAkBuH,GACd,IACIjE,EADOjB,KACQyN,OAAOzL,MAAK,SAAUyL,GACrC,OAAOA,EAAK9P,MAChB,IAGA,OADAsH,EAAgBhE,EAASiE,GAClBjE,CACX,EA4GIqE,IAjKJ,SAAetI,EAAGkI,GACd,IAAIhF,EAAOF,KACPiB,EAAUf,EAAKgL,QAAQlJ,MAAK,WAC5B,IACIM,EADAmF,EAASvH,EAAKoK,QAElB,IACIhI,EAAS+Q,aAAa/N,IAAItI,EAC9B,CAAE,MAAO4F,GACLN,EAAS,IACb,CAOA,OAJIA,IACAA,EAASA,EAAOyN,UAAUtI,EAAOyL,UAAUvV,SAGxC2E,CACX,IAGA,OADA2C,EAAgBhE,EAASiE,GAClBjE,CACX,EA6IIwM,KA3IJ,SAAgBvI,GACZ,IAAIhF,EAAOF,KACPiB,EAAUf,EAAKgL,QAAQlJ,MAAK,WAK5B,IAJA,IAAIyF,EAASvH,EAAKoK,QACd3M,EAAS0V,aAAa1V,OACtB8P,EAAO,GAEFpQ,EAAI,EAAGA,EAAIM,EAAQN,IAAK,CAC7B,IAAIqW,EAAUL,aAAa/N,IAAIjI,GACW,IAAtCqW,EAAQ1H,QAAQvE,EAAOyL,YACvBzF,EAAK1N,KAAK2T,EAAQ3D,UAAUtI,EAAOyL,UAAUvV,QAErD,CAEA,OAAO8P,CACX,IAGA,OADAxI,EAAgBhE,EAASiE,GAClBjE,CACX,EAyHIyM,aAhDJ,SAAwBzC,EAAS/F,GAI7B,GAHAA,EAAWQ,EAAYzD,MAAMjC,KAAMkC,aAEnC+I,EAA6B,mBAAZA,GAA0BA,GAAW,CAAC,GAC1C1G,KAAM,CACf,IAAIoJ,EAAgB3N,KAAK4N,SACzB3C,EAAQ1G,KAAO0G,EAAQ1G,MAAQoJ,EAAcpJ,KAC7C0G,EAAQpC,UAAYoC,EAAQpC,WAAa8E,EAAc9E,SAC3D,CAEA,IACI5H,EADAf,EAAOF,KAuBX,OAlBIiB,EAHCgK,EAAQ1G,KAGC,IAAIS,GAAU,SAAUnD,GACzBoJ,EAAQpC,UAGThH,EAAQmR,EAAc/H,EAAS/K,EAAKqL,iBAFpC1J,EAAQoJ,EAAQ1G,KAAO,IAI/B,IAAGvC,MAAK,SAAUkR,GACd,IAAK,IAAI7V,EAAIgW,aAAa1V,OAAS,EAAGN,GAAK,EAAGA,IAAK,CAC/C,IAAIiI,EAAM+N,aAAa/N,IAAIjI,GAEI,IAA3BiI,EAAI0G,QAAQkH,IACZG,aAAalG,WAAW7H,EAEhC,CACJ,IAhBUN,EAAUpD,OAAO,qBAmB/BqD,EAAgBhE,EAASiE,GAClBjE,CACX,GAqBI0S,GAAW,SAAkBC,EAAOC,GAGpC,IAFA,IAAIhU,EAAM+T,EAAMjW,OACZN,EAAI,EACDA,EAAIwC,GAAK,CACZ,IAR2BiU,EAQbF,EAAMvW,OARU0W,EAQNF,IAPG,iBAANC,GAA+B,iBAANC,GAAkBC,MAAMF,IAAME,MAAMD,GAQ9E,OAAO,EAEX1W,GACJ,CAZY,IAAmByW,EAAGC,EAclC,OAAO,CACX,EAEIE,GAAU9Q,MAAM8Q,SAAW,SAAUC,GACrC,MAA+C,mBAAxClR,OAAON,UAAUO,SAASvF,KAAKwW,EAC1C,EAIIC,GAAiB,CAAC,EAElBC,GAAgB,CAAC,EAEjBC,GAAiB,CACjBC,UAAWxJ,EACXyJ,OAAQlC,EACRmC,aAAcjB,IAGdkB,GAAqB,CAACJ,GAAeC,UAAUvJ,QAASsJ,GAAeE,OAAOxJ,QAASsJ,GAAeG,aAAazJ,SAEnH2J,GAAwB,CAAC,gBAEzBC,GAAiB,CAAC,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,aAAc,WAAWC,OAAOF,IAE1GG,GAAgB,CAChBtC,YAAa,GACbuC,OAAQL,GAAmBnJ,QAC3B/G,KAAM,cAGNiO,KAAM,QACN3J,UAAW,gBACXL,QAAS,GAGb,SAASuM,GAAcC,EAAqBC,GACxCD,EAAoBC,GAAiB,WACjC,IAAIC,EAAQhT,UACZ,OAAO8S,EAAoB9J,QAAQlJ,MAAK,WACpC,OAAOgT,EAAoBC,GAAehT,MAAM+S,EAAqBE,EACzE,GACJ,CACJ,CAEA,SAASC,KACL,IAAK,IAAI9X,EAAI,EAAGA,EAAI6E,UAAUvE,OAAQN,IAAK,CACvC,IAAI6W,EAAMhS,UAAU7E,GAEpB,GAAI6W,EACA,IAAK,IAAIkB,KAAQlB,EACTA,EAAImB,eAAeD,KACfnB,GAAQC,EAAIkB,IACZlT,UAAU,GAAGkT,GAAQlB,EAAIkB,GAAM9J,QAE/BpJ,UAAU,GAAGkT,GAAQlB,EAAIkB,GAK7C,CAEA,OAAOlT,UAAU,EACrB,CAEA,IAAIoT,GAAc,WACd,SAASA,EAAYrK,GAGjB,IAAK,IAAIsK,KAvnEjB,SAAyBC,EAAUC,GAAe,KAAMD,aAAoBC,GAAgB,MAAM,IAAI7U,UAAU,oCAAwC,CAqnEhJ8U,CAAgB1V,KAAMsV,GAEIjB,GACtB,GAAIA,GAAegB,eAAeE,GAAgB,CAC9C,IAAIT,EAAST,GAAekB,GACxBI,EAAab,EAAO/J,QACxB/K,KAAKuV,GAAiBI,EAEjBxB,GAAewB,IAIhB3V,KAAK4V,aAAad,EAE1B,CAGJ9U,KAAKuL,eAAiB4J,GAAO,CAAC,EAAGN,IACjC7U,KAAK6V,QAAUV,GAAO,CAAC,EAAGnV,KAAKuL,eAAgBN,GAC/CjL,KAAK8V,WAAa,KAClB9V,KAAK+V,YAAc,KACnB/V,KAAKgW,QAAS,EACdhW,KAAKsK,QAAU,KAEftK,KAAKiW,+BACLjW,KAAKkW,UAAUlW,KAAK6V,QAAQf,QAAe,OAAE,WAAa,GAC9D,CAyQA,OAjQAQ,EAAY5S,UAAUkL,OAAS,SAAgB3C,GAI3C,GAA0E,iBAAlD,IAAZA,EAA0B,YAAcxH,EAAQwH,IAAwB,CAGhF,GAAIjL,KAAKgW,OACL,OAAO,IAAIzY,MAAM,wDAGrB,IAAK,IAAIF,KAAK4N,EAAS,CAKnB,GAJU,cAAN5N,IACA4N,EAAQ5N,GAAK4N,EAAQ5N,GAAG8Y,QAAQ,MAAO,MAGjC,YAAN9Y,GAAyC,iBAAf4N,EAAQ5N,GAClC,OAAO,IAAIE,MAAM,sCAGrByC,KAAK6V,QAAQxY,GAAK4N,EAAQ5N,EAC9B,CAIA,QAAI,WAAY4N,KAAWA,EAAQ6J,QACxB9U,KAAKkW,UAAUlW,KAAK6V,QAAQf,OAI3C,CAAO,MAAuB,iBAAZ7J,EACPjL,KAAK6V,QAAQ5K,GAEbjL,KAAK6V,OAEpB,EAMAP,EAAY5S,UAAUkT,aAAe,SAAsBQ,EAAclR,EAAUE,GAC/E,IAAInE,EAAU,IAAI+D,GAAU,SAAUnD,EAASD,GAC3C,IACI,IAAI+T,EAAaS,EAAarL,QAC1BsL,EAAkB,IAAI9Y,MAAM,wFAIhC,IAAK6Y,EAAarL,QAEd,YADAnJ,EAAOyU,GAKX,IADA,IAAIC,EAAgB3B,GAAeC,OAAO,gBACjCvX,EAAI,EAAGwC,EAAMyW,EAAc3Y,OAAQN,EAAIwC,EAAKxC,IAAK,CACtD,IAAIkZ,EAAmBD,EAAcjZ,GAKrC,KADkBsW,GAASe,GAAuB6B,IAC/BH,EAAaG,KAAgE,mBAAnCH,EAAaG,GAEtE,YADA3U,EAAOyU,EAGf,EAE8B,WAU1B,IATA,IAAIG,EAA8B,SAAqCC,GACnE,OAAO,WACH,IAAI7T,EAAQ,IAAIrF,MAAM,UAAYkZ,EAAa,6CAC3CxV,EAAU+D,EAAUpD,OAAOgB,GAE/B,OADAqC,EAAgBhE,EAASiB,UAAUA,UAAUvE,OAAS,IAC/CsD,CACX,CACJ,EAESyV,EAAK,EAAGC,EAAOjC,GAAsB/W,OAAQ+Y,EAAKC,EAAMD,IAAM,CACnE,IAAIE,EAAuBlC,GAAsBgC,GAC5CN,EAAaQ,KACdR,EAAaQ,GAAwBJ,EAA4BI,GAEzE,CACJ,CAEAC,GAEA,IAAIC,EAAmB,SAA0BC,GACzC5C,GAAewB,IACfpQ,QAAQyR,KAAK,kCAAoCrB,GAErDxB,GAAewB,GAAcS,EAC7BhC,GAAcuB,GAAcoB,EAI5BlV,GACJ,EAEI,aAAcuU,EACVA,EAAa3K,UAA6C,mBAA1B2K,EAAa3K,SAC7C2K,EAAa3K,WAAWzJ,KAAK8U,EAAkBlV,GAE/CkV,IAAmBV,EAAa3K,UAGpCqL,GAAiB,EAEzB,CAAE,MAAOha,GACL8E,EAAO9E,EACX,CACJ,IAGA,OADAqI,EAAoBlE,EAASiE,EAAUE,GAChCnE,CACX,EAEAqU,EAAY5S,UAAUoS,OAAS,WAC3B,OAAO9U,KAAK+K,SAAW,IAC3B,EAEAuK,EAAY5S,UAAUuU,UAAY,SAAmBtB,EAAYzQ,EAAUE,GACvE,IAAI8R,EAAmB/C,GAAewB,GAAc3Q,EAAUnD,QAAQsS,GAAewB,IAAe3Q,EAAUpD,OAAO,IAAIrE,MAAM,sBAG/H,OADA4H,EAAoB+R,EAAkBhS,EAAUE,GACzC8R,CACX,EAEA5B,EAAY5S,UAAUyU,cAAgB,SAAuBjS,GACzD,IAAIkS,EAAoBpS,EAAUnD,QAAQmO,GAE1C,OADA7K,EAAoBiS,EAAmBlS,GAChCkS,CACX,EAEA9B,EAAY5S,UAAUwI,MAAQ,SAAehG,GACzC,IAAIhF,EAAOF,KAEPiB,EAAUf,EAAK4V,WAAW9T,MAAK,WAK/B,OAJoB,OAAhB9B,EAAK8V,SACL9V,EAAK8V,OAAS9V,EAAK6V,eAGhB7V,EAAK8V,MAChB,IAGA,OADA7Q,EAAoBlE,EAASiE,EAAUA,GAChCjE,CACX,EAEAqU,EAAY5S,UAAUwT,UAAY,SAAmBmB,EAASnS,EAAUE,GACpE,IAAIlF,EAAOF,KAENiU,GAAQoD,KACTA,EAAU,CAACA,IAGf,IAAIC,EAAmBtX,KAAKuX,qBAAqBF,GAEjD,SAASG,IACLtX,EAAK2V,QAAQf,OAAS5U,EAAK4U,QAC/B,CAEA,SAAS2C,EAAqB3C,GAK1B,OAJA5U,EAAKwX,QAAQ5C,GACb0C,IAEAtX,EAAK8V,OAAS9V,EAAK8K,aAAa9K,EAAK2V,SAC9B3V,EAAK8V,MAChB,CA8BA,IAAI2B,EAAuC,OAApB3X,KAAK8V,WAAsB9V,KAAK8V,WAAkB,OAAE,WACvE,OAAO9Q,EAAUnD,SACrB,IAAKmD,EAAUnD,UAqBf,OAnBA7B,KAAK8V,WAAa6B,EAAiB3V,MAAK,WACpC,IAAI2T,EAAa2B,EAAiB,GAIlC,OAHApX,EAAKoK,QAAU,KACfpK,EAAK8V,OAAS,KAEP9V,EAAK+W,UAAUtB,GAAY3T,MAAK,SAAU8S,GAC7C5U,EAAK6K,QAAU+J,EAAO/J,QACtByM,IACAtX,EAAK+V,+BACL/V,EAAK6V,YAzCb,SAAoBuB,GAChB,OAAO,WACH,IAAIM,EAAqB,EAmBzB,OAjBA,SAASC,IACL,KAAOD,EAAqBN,EAAiB3Z,QAAQ,CACjD,IAAIgY,EAAa2B,EAAiBM,GAMlC,OALAA,IAEA1X,EAAKoK,QAAU,KACfpK,EAAK8V,OAAS,KAEP9V,EAAK+W,UAAUtB,GAAY3T,KAAKyV,GAA6B,MAAEI,EAC1E,CAEAL,IACA,IAAI5U,EAAQ,IAAIrF,MAAM,sCAEtB,OADA2C,EAAK4V,WAAa9Q,EAAUpD,OAAOgB,GAC5B1C,EAAK4V,UAChB,CAEO+B,EACX,CACJ,CAkB2BC,CAAWR,EAClC,GACJ,IAAU,OAAE,WACRE,IACA,IAAI5U,EAAQ,IAAIrF,MAAM,sCAEtB,OADA2C,EAAK4V,WAAa9Q,EAAUpD,OAAOgB,GAC5B1C,EAAK4V,UAChB,IAEA3Q,EAAoBnF,KAAK8V,WAAY5Q,EAAUE,GACxCpF,KAAK8V,UAChB,EAEAR,EAAY5S,UAAUqV,SAAW,SAAkBpC,GAC/C,QAASvB,GAAcuB,EAC3B,EAEAL,EAAY5S,UAAUgV,QAAU,SAAiBM,GAC7C7C,GAAOnV,KAAMgY,EACjB,EAEA1C,EAAY5S,UAAU6U,qBAAuB,SAA8BF,GAEvE,IADA,IAAIC,EAAmB,GACdja,EAAI,EAAGwC,EAAMwX,EAAQ1Z,OAAQN,EAAIwC,EAAKxC,IAAK,CAChD,IAAIsY,EAAa0B,EAAQha,GACrB2C,KAAK+X,SAASpC,IACd2B,EAAiBvX,KAAK4V,EAE9B,CACA,OAAO2B,CACX,EAEAhC,EAAY5S,UAAUuT,6BAA+B,WAKjD,IAAK,IAAI5Y,EAAI,EAAGwC,EAAM8U,GAAehX,OAAQN,EAAIwC,EAAKxC,IAClD0X,GAAc/U,KAAM2U,GAAetX,GAE3C,EAEAiY,EAAY5S,UAAUuV,eAAiB,SAAwBhN,GAC3D,OAAO,IAAIqK,EAAYrK,EAC3B,EAEOqK,CACX,CAtSkB,GA4Sd4C,GAAiB,IAAI5C,GAEzB1Y,EAAOC,QAAUqb,EAEjB,EAAE,CAAC,EAAI,KAAK,CAAC,EAAE,CAAC,GAxvFmW,CAwvF/V,KC7vFhBC,EAA2B,CAAC,EAGhC,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqB3N,IAAjB4N,EACH,OAAOA,EAAazb,QAGrB,IAAID,EAASub,EAAyBE,GAAY,CAGjDxb,QAAS,CAAC,GAOX,OAHA0b,EAAoBF,GAAUzb,EAAQA,EAAOC,QAASub,GAG/Cxb,EAAOC,OACf,CCrBAub,EAAoBpb,EAAKJ,IACxB,IAAI4b,EAAS5b,GAAUA,EAAO6b,WAC7B,IAAO7b,EAAiB,QACxB,IAAM,EAEP,OADAwb,EAAoBM,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdJ,EAAoBM,EAAI,CAAC7b,EAAS+b,KACjC,IAAI,IAAItT,KAAOsT,EACXR,EAAoBjb,EAAEyb,EAAYtT,KAAS8S,EAAoBjb,EAAEN,EAASyI,IAC5EtC,OAAO6V,eAAehc,EAASyI,EAAK,CAAEwT,YAAY,EAAMrM,IAAKmM,EAAWtT,IAE1E,ECND8S,EAAoBnY,EAAI,WACvB,GAA0B,iBAAf8Y,WAAyB,OAAOA,WAC3C,IACC,OAAO/Y,MAAQ,IAAIgZ,SAAS,cAAb,EAChB,CAAE,MAAOlc,GACR,GAAsB,iBAAXqD,OAAqB,OAAOA,MACxC,CACA,CAPuB,GCAxBiY,EAAoBjb,EAAI,CAAC4E,EAAKkX,IAAUjW,OAAON,UAAU2S,eAAe3X,KAAKqE,EAAKkX,sBCElF,MAAMC,EAAuB,CACzBC,eAAgB,KAEhBC,0BAA0B,EAC1BC,gBAAiB,GAEjBC,SAAU,CACNC,SAAUhb,SAASib,eAAe,iBAClCC,WAAYlb,SAASib,eAAe,WACpCE,mBAAoBnb,SAASib,eAAe,+BAC5CG,gBAAiBpb,SAASib,eAAe,2BACzCI,UAAWrb,SAASib,eAAe,WACnCK,yBAA0Btb,SAASib,eAAe,0CAEtDM,UAAW,CACPC,aAAcxb,SAASyb,iBAAiB,+BAIhD,SAASC,IACL,OAAOf,EAAqBI,SAASM,UAAUM,aAAa,+BAChE,CAgBA,SAASC,EAAU5V,GAEfA,GAAc,IAGd,MAGM6V,EAHgBC,mBAAmB9b,SAAS+b,QAGpBC,MAAM,KAGpC,IAAK,IAAIld,EAAI,EAAGA,EAAI+c,EAAQzc,OAAQN,IAAK,CAErC,MAAMid,EAASF,EAAQ/c,GAAGmd,OAG1B,GAA4B,GAAxBF,EAAOtO,QAAQzH,GAEf,OAAO+V,EAAOvK,UAAUxL,EAAK5G,OAAQ2c,EAAO3c,OAEpD,CACJ,CAKA,SAAS8c,EAAUC,EAAU,GAAIC,GAAc,GACvCzB,EAAqBE,0BAErBsB,EAAU,GACVC,GAAc,IAES,iBAAZD,IAEHA,EADAA,EAAQ/b,MAAQ+b,EAAQ/b,KAAK+b,QACnBA,EAAQ/b,KAAK+b,QAAU,2BACNhQ,IAApBgQ,EAAQA,QACLA,EAAQA,QAAU,2BACHhQ,IAAlBgQ,EAAQ9X,YAAiD8H,IAA1BgQ,EAAQ9X,MAAM8X,QAC1CA,EAAQ9X,MAAM8X,QAAU,sBAExB,IAGF,KAAZA,IACAA,EAAU,8HAIlBxB,EAAqBI,SAASC,SAASqB,UAAYF,GAE/B,IAAhBC,GACAE,EAAc,OAElB,IACI3B,EAAqBI,SAASM,UAAUkB,gBAAgB,WAC5D,CAAE,MAAOhe,GACL,OAAO,CACX,CAEA,OAAO,CACX,CAMA,SAAS+d,EAAcE,GACnB7B,EAAqBY,UAAUC,aAAaiB,SACxC,SAAUC,GACFA,EAAIC,KAAOH,EACXE,EAAIE,MAAMC,QAAU,QAEpBH,EAAIE,MAAMC,QAAU,MAE5B,GAER,uBC9GAC,eAAeC,IACX,IAAIC,EAAMrC,EAAqBI,SAASK,gBAAgBO,aAAa,yBACrE,MAAMsB,EAAcrB,EAAU,oBAE9B,IAAI3W,QAAiBuI,MAAMwP,EAAK,CAC5BE,QAAS,CACL,eAAgBD,EAChB,mBAAoBA,KAI5B,GAAIhY,EAASkY,GAAI,CACb,IAAI/c,QAAa6E,EAASmY,OACmB,KAAzCzC,EAAqBG,gBACrBH,EAAqBG,gBAAkB1a,EAAK6D,OACrC0W,EAAqBG,kBAAoB1a,EAAK6D,QAEjC,MAAhB7D,EAAK6D,QACLoZ,SAASC,QAGrB,CACJ,CC3BA,IAAIC,EAAwC,SAAUC,EAASC,EAAYC,EAAGC,GAE1E,OAAO,IAAKD,IAAMA,EAAIvb,WAAU,SAAUmB,EAASD,GAC/C,SAASua,EAAUza,GAAS,IAAM0a,EAAKF,EAAUG,KAAK3a,GAAS,CAAE,MAAO5E,GAAK8E,EAAO9E,EAAI,CAAE,CAC1F,SAASwf,EAAS5a,GAAS,IAAM0a,EAAKF,EAAiB,MAAExa,GAAS,CAAE,MAAO5E,GAAK8E,EAAO9E,EAAI,CAAE,CAC7F,SAASsf,EAAK9Z,GAJlB,IAAeZ,EAIaY,EAAOia,KAAO1a,EAAQS,EAAOZ,QAJ1CA,EAIyDY,EAAOZ,MAJhDA,aAAiBua,EAAIva,EAAQ,IAAIua,GAAE,SAAUpa,GAAWA,EAAQH,EAAQ,KAIjBM,KAAKma,EAAWG,EAAW,CAC7GF,GAAMF,EAAYA,EAAUja,MAAM8Z,EAASC,GAAc,KAAKK,OAClE,GACJ,EACIG,EAA4C,SAAUT,EAASU,GAC/D,IAAsGnf,EAAGyW,EAAGhX,EAAGkD,EAA3Gyc,EAAI,CAAEC,MAAO,EAAGC,KAAM,WAAa,GAAW,EAAP7f,EAAE,GAAQ,MAAMA,EAAE,GAAI,OAAOA,EAAE,EAAI,EAAG8f,KAAM,GAAIC,IAAK,IAChG,OAAO7c,EAAI,CAAEoc,KAAMU,EAAK,GAAI,MAASA,EAAK,GAAI,OAAUA,EAAK,IAAwB,mBAAXrZ,SAA0BzD,EAAEyD,OAAOC,UAAY,WAAa,OAAO3D,IAAM,GAAIC,EACvJ,SAAS8c,EAAK/f,GAAK,OAAO,SAAUggB,GAAK,OACzC,SAAcC,GACV,GAAI3f,EAAG,MAAM,IAAIsD,UAAU,mCAC3B,KAAOX,IAAMA,EAAI,EAAGgd,EAAG,KAAOP,EAAI,IAAKA,OACnC,GAAIpf,EAAI,EAAGyW,IAAMhX,EAAY,EAARkgB,EAAG,GAASlJ,EAAU,OAAIkJ,EAAG,GAAKlJ,EAAS,SAAOhX,EAAIgX,EAAU,SAAMhX,EAAEW,KAAKqW,GAAI,GAAKA,EAAEsI,SAAWtf,EAAIA,EAAEW,KAAKqW,EAAGkJ,EAAG,KAAKV,KAAM,OAAOxf,EAE3J,OADIgX,EAAI,EAAGhX,IAAGkgB,EAAK,CAAS,EAARA,EAAG,GAAQlgB,EAAE2E,QACzBub,EAAG,IACP,KAAK,EAAG,KAAK,EAAGlgB,EAAIkgB,EAAI,MACxB,KAAK,EAAc,OAAXP,EAAEC,QAAgB,CAAEjb,MAAOub,EAAG,GAAIV,MAAM,GAChD,KAAK,EAAGG,EAAEC,QAAS5I,EAAIkJ,EAAG,GAAIA,EAAK,CAAC,GAAI,SACxC,KAAK,EAAGA,EAAKP,EAAEI,IAAI/U,MAAO2U,EAAEG,KAAK9U,MAAO,SACxC,QACI,MAAkBhL,GAAZA,EAAI2f,EAAEG,MAAYlf,OAAS,GAAKZ,EAAEA,EAAEY,OAAS,KAAkB,IAAVsf,EAAG,IAAsB,IAAVA,EAAG,IAAW,CAAEP,EAAI,EAAG,QAAU,CAC3G,GAAc,IAAVO,EAAG,MAAclgB,GAAMkgB,EAAG,GAAKlgB,EAAE,IAAMkgB,EAAG,GAAKlgB,EAAE,IAAM,CAAE2f,EAAEC,MAAQM,EAAG,GAAI,KAAO,CACrF,GAAc,IAAVA,EAAG,IAAYP,EAAEC,MAAQ5f,EAAE,GAAI,CAAE2f,EAAEC,MAAQ5f,EAAE,GAAIA,EAAIkgB,EAAI,KAAO,CACpE,GAAIlgB,GAAK2f,EAAEC,MAAQ5f,EAAE,GAAI,CAAE2f,EAAEC,MAAQ5f,EAAE,GAAI2f,EAAEI,IAAI/c,KAAKkd,GAAK,KAAO,CAC9DlgB,EAAE,IAAI2f,EAAEI,IAAI/U,MAChB2U,EAAEG,KAAK9U,MAAO,SAEtBkV,EAAKR,EAAK/e,KAAKqe,EAASW,EAC5B,CAAE,MAAO5f,GAAKmgB,EAAK,CAAC,EAAGngB,GAAIiX,EAAI,CAAG,CAAE,QAAUzW,EAAIP,EAAI,CAAG,CACzD,GAAY,EAARkgB,EAAG,GAAQ,MAAMA,EAAG,GAAI,MAAO,CAAEvb,MAAOub,EAAG,GAAKA,EAAG,QAAK,EAAQV,MAAM,EAC9E,CAtBgDH,CAAK,CAACpf,EAAGggB,GAAK,CAAG,CAuBrE,EACIE,EAAoC,CAAC,EAClC,SAASC,EAAa7X,EAAK8X,GAC9B,OAAOtB,EAAU9b,UAAM,OAAQ,GAAQ,WACnC,IAAIqd,EAAK3N,EACL4N,EAAQtd,KACZ,OAAOwc,EAAYxc,MAAM,SAAUud,GAuC/B,OAtCAF,EAAMH,EAAkC5X,GACxCoK,EAAI,IAAIhP,SAAQ,SAAUmB,GAAW,OAAOA,GAAW,IAClDG,MAAK,WAAc,OAAO8Z,EAAUwB,OAAO,OAAQ,GAAQ,WAC5D,OAAOd,EAAYxc,MAAM,SAAUud,GAC/B,OAAQA,EAAGZ,OACP,KAAK,EAAG,MAAO,CAAC,EAAG,IAAIjc,SAAQ,SAAUmB,GAC7Bwb,EACAA,EAAIG,SAAQ,WACR3b,GACJ,IAAG4b,OAAM,WAAc,IAGvB5b,GAER,KACJ,KAAK,EAED,OADA0b,EAAGX,OACI,CAAC,GAEpB,GACJ,GAAI,IAAG5a,MAAK,WAAc,OAAO8Z,EAAUwB,OAAO,OAAQ,GAAQ,WAE9D,OAAOd,EAAYxc,MAAM,SAAUud,GAC/B,OAAQA,EAAGZ,OACP,KAAK,EAAG,MAAO,CAAC,EAAGS,KACnB,KAAK,EAED,MAAO,CAAC,EADJG,EAAGX,QAGnB,GACJ,GAAI,IAAGY,SAAQ,WACPN,EAAkC5X,KAASoK,UACpCwN,EAAkC5X,EAIjD,IACA4X,EAAkC5X,GAAOoK,EAClC,CAAC,EAAGA,EACf,GACJ,GACJ,CCnEA,SAASgO,EAAsCnC,GAC7C,MAAMnU,EAAQmU,EAAInU,MAAM,uBACxB,OAAOA,EAAQA,EAAM,QAAKsD,CAC5B,CAEA,MAAMiT,EAAa,wCAEnBtC,eAAeuC,IACb,MAAM3gB,QAAU,YAAoB0gB,GACpC,OAAa,OAAN1gB,EAAa,CAAC,EAAIA,CAC3B,CCbA,IAAI4gB,EAoFJxC,eAAeyC,IJKX5E,EAAqBI,SAASC,SAASqB,UAAY,GIuBnD,UA3BAS,iBAEInC,EAAqBC,qBJ3E7BkC,eAAyC0C,GAAU,GAC/C,IAAKA,GAAmD,OAAxC7E,EAAqBC,eACjC,OAAOD,EAAqBC,eAGhC,MAAM3V,QAAiBuI,MAAMkO,KAE7B,GAAIzW,EAAShB,QAAU,IACnB,KAAM,kGAGV,aAAagB,EAASmY,MAC1B,CI+DoDqC,EAA0B,IAEA,IAAlE9E,EAAqBC,eAAuC,uBAnExE,UAA2B,UACvB8E,EAAS,gBACTC,EAAe,+BACfC,EAA8B,gBAC9BC,EAAe,UACfC,EAAS,oBACTC,IAEA,MAAMC,EAAsB,4BA7BhC,UAAiE,SAAEC,EAAQ,oBAAEF,EAAmB,cAAEG,IAC1FZ,IACA1d,OAAOue,oBAAoB,UAAWb,GAA2C,GACjFA,OAA4CnT,GAGhDmT,EAA6Cc,IACrCA,EAAMC,SAAWJ,IACH,OAAVG,GAAmC,iBAAVA,GAAqC,OAAfA,EAAMhgB,MAAuC,iBAAfggB,EAAMhgB,KAC3D,sBAApBggB,EAAMhgB,KAAKkgB,KAA8BP,EAAoBK,EAAMhgB,MAC1C,gBAApBggB,EAAMhgB,KAAKkgB,KAAwBJ,IACf,aAApBE,EAAMhgB,KAAKkgB,MAGftZ,QAAQ3C,MAAM,+CAAgD+b,EAAMhgB,KAAKkgB,MAC3EtZ,QAAQ3C,MAAM,gCAAiC+b,GAC1D,EAEJxe,OAAO2e,iBAAiB,UAAWjB,GAA2C,EAClF,CAYIkB,CAAwD,CACpDP,SAAU,IAAIQ,IAAIf,GAAWW,OAC7BN,sBACAG,cAAe,MAqCnB,SAA2BvD,GACvB,MAAM+D,EAAK1gB,SAASib,eAAe0B,GAC/B+D,GAAIA,EAAGC,QACf,CAxC2BC,CAAkBZ,EAAoB,IAQjE,MAAMa,EAA6B,gFAC7BC,EAA2Blf,OAAOyb,SAASgD,OAC3CU,EAA4B,CAC9BC,wBAAwB,GAEtBC,EAA0B,wBAI1BC,EAAyB,MAE3B,MAAMC,EAAW,CAACzB,GAclB,OAbAyB,EAAS3f,KAAK,oBAAoB4f,mBAAmBzB,MACrDwB,EAAS3f,KAAK,WAAW4f,mBAAmBxB,MAC5CuB,EAAS3f,KAAK,aAAa4f,mBAAmBvB,MAC9CsB,EAAS3f,KAAK,cAAc4f,mBAAmBtB,MAC3Ce,GAA4BM,EAAS3f,KAAK,+BAA+B4f,mBAAmBP,MAC5FC,GAA0BK,EAAS3f,KAAK,6BAA6B4f,mBAAmBN,MACxFC,IACAI,EAAS3f,KAAK,gCACVuf,EAA0BC,wBAAwBG,EAAS3f,KAAK,8BAEpEyf,GAAyBE,EAAS3f,KAAK,4BAA4B4f,mBAAmBH,MACrDE,EAAS3f,KAAK,sCACvC2f,EAASE,KAAK,GAE7B,EAjB8B,GAyB/B,IAAyBC,EAAmBtE,EAAnBsE,EAPTtB,EAO4BhD,EAPPkE,EASjC,WAAe,IAAIK,EAAIvhB,SAASO,cAAc,OAAQghB,EAAE5E,GAAK2E,EAAmBC,EAAE3E,MAAQ,2JAA4J2E,EAAEC,QAAU,SAAUjjB,GAASA,EAAEsM,SAAW0W,GAAKE,GAAiB,EAAG,IAAIA,EAAc,WAAkBzhB,SAASke,KAAK9S,SAASmW,KAAMvhB,SAASke,KAAKvd,YAAY4gB,GAAIvhB,SAASmgB,oBAAoB,UAAWuB,GAAgB,EAAOA,EAAc,SAAUnjB,GAAmB,WAAVA,EAAEwI,KAAoB0a,GAAiB,EAAGzhB,SAASugB,iBAAiB,UAAWmB,GAAc,IAAIC,EAAK3hB,SAASO,cAAc,OAAYqhB,EAAWhgB,OAAOigB,WAAa,IAAOjgB,OAAOigB,WAAa,GAAM,KAAO,QAAifF,EAAG/E,MAAQ,6DAA+DgF,EAAW,oJAAqJ,IAAI9iB,EAAIkB,SAASO,cAAc,UAAWzB,EAAEgjB,MAAQ,kBAA6GhjB,EAAE8d,MAAQ,mCAAoC9d,EAAEijB,IAAM/E,EAAK,IAAI7I,EAAInU,SAASO,cAAc,OAAQ4T,EAAEyI,MAAQ,wFAAyFzI,EAAEkI,UAAY,gWAA+WlI,EAAEqN,QAAU,WAAcC,GAAe,EAAGE,EAAG9gB,YAAY/B,GAAI6iB,EAAG9gB,YAAYsT,GAAIoN,EAAE1gB,YAAY8gB,GAAK3hB,SAASke,KAAKrd,YAAY0gB,EAAK,CAA5wE,EAER,CAmBQS,CAAkB,CACdtC,UAAW,+JACXC,gBAAiBhF,EAAqBC,eAAkC,kBACxEgF,+BAAgCjF,EAAqBC,eAAuB,OAC5EiF,gBAAiBlF,EAAqBC,eAAiC,iBACvEkF,UAAWnF,EAAqBC,eAA4B,YAC5DmF,oBAAqBkC,IAhBrB/F,EAAU,sDAkBlB,CAKUgG,EACV,CAAE,MAAO7d,GACL2C,QAAQ3C,MAAM,kBAAmBA,GACjC6X,EAAU7X,GAAO,EACrB,CACJ,CAEAyY,eAAemF,EAA8CE,GAezD,MAAMC,EAAKD,EAaLE,EAZoC,CAEtCC,cAAeF,EAAGG,iCAAiCD,cACnDE,UAAWJ,EAAGK,sBACdtG,QAASlK,KAAKC,UAAUkQ,EAAGG,kCAC3BG,gBAAiBN,EAAGM,gBACpBC,QAASP,EAAGO,QACZC,YAAaR,EAAGQ,YAChBC,UAAWT,EAAGS,UACdC,YAAaV,EAAGU,YAChBC,cAAeX,EAAGW,oBAIO,IAAlBX,EAAGY,aAA4BX,EAAIW,WAAaZ,EAAGY,iBAC9B,IAArBZ,EAAGa,gBAA+BZ,EAAIY,cAAgBb,EAAGa,oBAC7B,IAA5Bb,EAAGc,uBAAsCb,EAAIa,qBAAuBd,EAAGc,2BACtD,IAAjBd,EAAGe,YAA2Bd,EAAIc,UAAYf,EAAGe,gBAChC,IAAjBf,EAAGgB,YAA2Bf,EAAIe,UAAYhB,EAAGgB,WAE5D,UD1IGtG,gBAA4C,kCAAEuG,IACnD,OAAOzE,EAAaQ,GAAYtC,UAC9B,MAAM3L,QAAUkO,IAEhBlO,EADgBgO,EAAsCzD,MACzC2H,QACP,YAAoBjE,EAAYjO,EAAE,GAE5C,CCoIcmS,CAA6B,CAAED,kCAAmChB,GAC5E,CAAE,MAAOhe,GACL6X,EAAU,sGAAsGjK,KAAKC,UAAUmQ,aAAehe,KAAS,EAC3J,CACJ,EDxHOyY,eAAeyG,EAA0CC,EAAU,GACxE,IAAIC,EAAc,EAElB,MAAMC,EAA+Bjf,OAAOkf,cAT9C7G,iBACE,OAAO8B,EAAaQ,GAAYtC,SACvBuC,KAEX,CAK4DuE,IAC1D,GAAIF,EAA6BtkB,OAAS,EAAG,CAC3C,MAAM4d,EAAMtB,IACNmI,EAAqB1E,EAAsCnC,GAC3D8G,EAAsBJ,EAA6BK,MAAKC,GAC5CA,EAAK,KACFH,IAErB,GAAIC,EAAqB,CACvB,MAAOG,EAAiBC,GAAqBJ,EAC7C,IACE,MAAM7G,EAAcrB,EAAU,qBAAuBA,EAAU,2BACzDuI,EAAS,CACbjH,QAAS,CACP,eAAgB,oCAChB,cAAeD,GAEjBmH,OAAQ,OACRnY,KAAM,cACNiS,KAAM,IAAImG,gBAAgB,IACrBH,EACHI,oBAAqBrH,KAIzB,WADuBzP,MAAMwP,EAAKmH,IACrBhH,GAMX,MAAM,IAAIne,MAAM,wDALhBkd,EAAU,KAAK,GHkCGtB,EGjCCsJ,EHkCzBvJ,EAAqBE,0BAA2B,EAChDF,EAAqBI,SAASI,mBAAmBkB,UAAY,GAAGzB,EAAe8H,sBAAsB9H,EAAeuI,uBAAuBvI,EAAe+H,qBAAqB/H,EAAeoI,0CAC9L1G,IACA3B,EAAqBI,SAASG,WAAW0B,MAAMC,QAAU,cGjF7DC,gBAAoE,QAAEyH,IACpE,OAAO3F,EAAaQ,GAAYtC,UAC9B,MAAM3L,QAAUkO,WACTlO,EAAEoT,SACH,YAAoBnF,EAAYjO,EAAE,GAE5C,CAuCgBqT,CAAqD,CAAED,QAASN,UFxDhFnH,iBACI,OAAa,CACT,UACUC,GACV,CAAE,MAAOxe,GAAK,OACR,IAAI4D,SAAQmB,GAAWxC,WAAWwC,EAAS,MACrD,CACJ,CEkDgBmhB,EAIV,CAAE,MAAOpgB,GACP6X,EAAU,sNAAsNgI,EAAkBxB,sBAAsBwB,EAAkBf,uBAAuBe,EAAkBvB,0BAA0BuB,EAAkBlB,eAAe,GAC9XS,EAAcD,EAAU,CAC1B,CACF,CACF,CHsBF,IAA4B5I,EGrB1B,MACM8J,EAAUC,KAAKC,IADF,KACyC,IAAvBD,KAAKE,IAAI,EAAGrB,IACjD1iB,YAAW,IAAMyiB,EAA0CE,IAAciB,EAC3E,EAGEnB,GEhGFzG,iBACI9c,SAAS8kB,MAAQ,iBACjB9kB,SAASib,eAAe,WAAW2B,MAAMC,QAAU,OACnD,MAAMkI,EAAY/kB,SAASib,eAAe,WACtC8J,EAAWA,EAAUxE,iBAAiB,QAAShB,GAC9CvY,QAAQ3C,MAAM,sBACvB,CAEA2gB","sources":["webpack://web3modal_todo_rename/./node_modules/localforage/dist/localforage.js","webpack://web3modal_todo_rename/webpack/bootstrap","webpack://web3modal_todo_rename/webpack/runtime/compat get default export","webpack://web3modal_todo_rename/webpack/runtime/define property getters","webpack://web3modal_todo_rename/webpack/runtime/global","webpack://web3modal_todo_rename/webpack/runtime/hasOwnProperty shorthand","webpack://web3modal_todo_rename/./src/interface.js","webpack://web3modal_todo_rename/./src/periodic_check.js","webpack://web3modal_todo_rename/./src/queuePromise.js","webpack://web3modal_todo_rename/./src/transactionDetailsBuffer.js","webpack://web3modal_todo_rename/./src/core.js","webpack://web3modal_todo_rename/./src/web3modal.js"],"sourcesContent":["/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\"use strict\";\n\nconst GlobalPretixEthState = {\n    paymentDetails: null,\n    // payment flow flags\n    transactionHashSubmitted: false,\n    lastOrderStatus: '',\n    // interface and data-bearing tags\n    elements: {\n        divError: document.getElementById(\"message-error\"),\n        divSuccess: document.getElementById(\"success\"),\n        divTransactionHash: document.getElementById(\"pretix-eth-transaction-hash\"),\n        aOrderDetailURL: document.getElementById(\"pretix-order-detail-url\"),\n        buttonPay: document.getElementById(\"btn-pay\"),\n        submittedTransactionHash: document.getElementById(\"pretix-eth-submitted-transaction-hash\"),\n    },\n    selectors: {\n        paymentSteps: document.querySelectorAll(\".pretix-eth-payment-steps\")\n    },\n}\n\nfunction getTransactionDetailsURL() {\n    return GlobalPretixEthState.elements.buttonPay.getAttribute(\"data-transaction-details-url\");\n}\n\nasync function getPaymentTransactionData(refresh = false) {\n    if (!refresh && GlobalPretixEthState.paymentDetails !== null) {\n        return GlobalPretixEthState.paymentDetails\n    }\n\n    const response = await fetch(getTransactionDetailsURL());\n\n    if (response.status >= 400) { // TODO should this be `if response.status is not 2xx`?\n        throw \"Failed to fetch order details. If this problem persists, please contact the organizer directly.\";\n    }\n\n    return await response.json();\n}\n\nfunction getCookie(name) {\n    // Add the = sign\n    name = name + '=';\n\n    // Get the decoded cookie\n    const decodedCookie = decodeURIComponent(document.cookie);\n\n    // Get all cookies, split on ; sign\n    const cookies = decodedCookie.split(';');\n\n    // Loop over the cookies\n    for (let i = 0; i < cookies.length; i++) {\n        // Define the single cookie, and remove whitespace\n        const cookie = cookies[i].trim();\n\n        // If this cookie has the name of what we are searching\n        if (cookie.indexOf(name) == 0) {\n            // Return everything after the cookies name\n            return cookie.substring(name.length, cookie.length);\n        }\n    }\n}\n\n/*\n* Success and error handling\n*/\nfunction showError(message = '', reset_state = true) {\n    if (GlobalPretixEthState.transactionHashSubmitted) {\n        // do not display errors or reset state after the transaction hash has been successfully submitted to the BE\n        message = \"\";\n        reset_state = false;\n    } else {\n        if (typeof message === \"object\") {\n            if (message.data && message.data.message) {\n                message = message.data.message + \". Please try again.\"\n            } else if (message.message !== undefined) {\n                message = message.message + \". Please try again.\"\n            } else if (message.error !== undefined && message.error.message !== undefined) {\n                message = message.error.message + \". Please try again.\";\n            } else {\n                message = \"\";\n            }\n        }\n        if (message === \"\") {\n            message = \"There was an error, please try again, or contact support if you have already confirmed a payment in your wallet provider.\"\n        }\n    }\n\n    GlobalPretixEthState.elements.divError.innerHTML = message;\n\n    if (reset_state === true) {\n        displayOnlyId(\"pay\");\n    }\n    try {\n        GlobalPretixEthState.elements.buttonPay.removeAttribute(\"disabled\");\n    } catch (e) {\n        return false\n    }\n\n    return false\n}\n\nfunction resetErrorMessage() {\n    GlobalPretixEthState.elements.divError.innerHTML = '';\n}\n\nfunction displayOnlyId(divId) {\n    GlobalPretixEthState.selectors.paymentSteps.forEach(\n        function (div) {\n            if (div.id === divId) {\n                div.style.display = \"block\";\n            } else {\n                div.style.display = \"none\";\n            }\n        }\n    );\n}\n\nfunction showSuccessMessage(paymentDetails) {\n    GlobalPretixEthState.transactionHashSubmitted = true;\n    GlobalPretixEthState.elements.divTransactionHash.innerHTML = `${paymentDetails.transactionHash} on ${paymentDetails.chainName} (chain ID ${paymentDetails.chainId}) <a href=\"${paymentDetails.receiptUrl}\" target=\"_blank\">receipt</a>`;\n    displayOnlyId();\n    GlobalPretixEthState.elements.divSuccess.style.display = \"block\";\n}\n\nexport {\n    GlobalPretixEthState, displayOnlyId, getCookie, getPaymentTransactionData, getTransactionDetailsURL, resetErrorMessage, showError, showSuccessMessage\n};\n","import { getCookie, GlobalPretixEthState } from \"./interface.js\";\n\n// periodicCheck monitors for an existing unconfirmed payment to become\n// confirmed and when it does, reload the page to render with fresh\n// confirmation state.\nasync function periodicCheck() {\n    let url = GlobalPretixEthState.elements.aOrderDetailURL.getAttribute(\"data-order-detail-url\");\n    const csrf_cookie = getCookie('pretix_csrftoken')\n\n    let response = await fetch(url, {\n        headers: {\n            'X-CSRF-TOKEN': csrf_cookie,\n            'HTTP-X-CSRFTOKEN': csrf_cookie,\n        }\n    });\n\n    if (response.ok) {\n        let data = await response.json()\n        if (GlobalPretixEthState.lastOrderStatus === '') {\n            GlobalPretixEthState.lastOrderStatus = data.status;\n        } else if (GlobalPretixEthState.lastOrderStatus !== data.status) {\n            // status has changed to PAID\n            if (data.status === 'p') {\n                location.reload();\n            }\n        }\n    }\n}\n\nasync function runPeriodicCheck() {\n    while (true) {\n        try {\n            await periodicCheck();\n        } catch (e) { }\n        await new Promise(resolve => setTimeout(resolve, 5000));\n    }\n}\n\nexport { runPeriodicCheck };\n","var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nvar mostRecentPromiseInProgressPerKey = {};\nexport function queuePromise(key, thunk) {\n    return __awaiter(this, void 0, void 0, function () {\n        var mrp, p;\n        var _this = this;\n        return __generator(this, function (_a) {\n            mrp = mostRecentPromiseInProgressPerKey[key];\n            p = new Promise(function (resolve) { return resolve(); })\n                .then(function () { return __awaiter(_this, void 0, void 0, function () {\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4, new Promise(function (resolve) {\n                                if (mrp) {\n                                    mrp.finally(function () {\n                                        resolve();\n                                    }).catch(function () { });\n                                }\n                                else {\n                                    resolve();\n                                }\n                            })];\n                        case 1:\n                            _a.sent();\n                            return [2];\n                    }\n                });\n            }); }).then(function () { return __awaiter(_this, void 0, void 0, function () {\n                var r;\n                return __generator(this, function (_a) {\n                    switch (_a.label) {\n                        case 0: return [4, thunk()];\n                        case 1:\n                            r = _a.sent();\n                            return [2, r];\n                    }\n                });\n            }); }).finally(function () {\n                if (mostRecentPromiseInProgressPerKey[key] === p) {\n                    delete mostRecentPromiseInProgressPerKey[key];\n                }\n                else {\n                }\n            });\n            mostRecentPromiseInProgressPerKey[key] = p;\n            return [2, p];\n        });\n    });\n}\n","import localForage from \"localforage\";\nimport {\n  getCookie,\n  getTransactionDetailsURL,\n  showError,\n  showSuccessMessage\n} from './interface.js';\nimport { runPeriodicCheck } from './periodic_check.js';\nimport { queuePromise } from \"./queuePromise\";\n\n// Design note: when the real 3cities SDK is ready, this entire subsystem of tracking transaction details pending server submission can be managed inside the SDK. The client API can be quite thin, maybe just (1) provide a primary key for each transaction details (orderId, accountId, function to generate an accountId given 3cities txn details, etc), and (2) provide a function that accepts a pending (primaryKey, txDetails) and returns a Promise that resolves iff the pending details were successfully submitted to the server; this allows the client to own any submission logic, while making it easy to mark tx details as submitted inside the 3cities SDK.\n\n// parseOrderIdFromTransactionDetailsURL takes in a pretix plugin\n// transaction details URL like \".../Test/w9vgc/order/:orderId:/...\" and\n// returns the order ID. Behavior is undefined if the passed URL doesn't\n// conform to this shape.\nfunction parseOrderIdFromTransactionDetailsURL(url) {\n  const match = url.match(/\\/order\\/([^\\/]+)\\//);\n  return match ? match[1] : undefined;\n}\n\nconst storageKey = \"pretix_eth_transaction_details_buffer\";\n\nasync function getAllPendingTransactionDetailsSkipQueue() {\n  const r = await localForage.getItem(storageKey);\n  return r === null ? {} : r;\n}\n\n// addPendingTransactionDetails schedules pending onchain transaction\n// details to be submitted to the server. The passed details must be for\n// the orderId implied by this page's URL.\nexport async function addPendingTransactionDetails({ transactionDetailsUrlSearchParams }) { // TODO real return type that shows if it already existed, was overwritten, etc.\n  return queuePromise(storageKey, async () => {\n    const p = await getAllPendingTransactionDetailsSkipQueue(); // WARNING here we must use getPendingTransactionDetailsSkipQueue to skip the promise queue, or else we'll deadlock the promise queue as this promise depends on the subsequentedly queued getMostRecentlyUsed promise to settle. Note that skipping the queue here is correct behavior as queuePromise guarantees that any potentially conflicting changes have already settled before this promise runs\n    const orderId = parseOrderIdFromTransactionDetailsURL(getTransactionDetailsURL());\n    p[orderId] = transactionDetailsUrlSearchParams;\n    await localForage.setItem(storageKey, p);\n  });\n}\n\nasync function markPendingTransactionDetailsAsSuccessfullySubmitted({ orderId }) { // TODO real return type that shows if details for this orderId existed or not\n  return queuePromise(storageKey, async () => {\n    const p = await getAllPendingTransactionDetailsSkipQueue(); // WARNING here we must use getPendingTransactionDetailsSkipQueue to skip the promise queue, or else we'll deadlock the promise queue as this promise depends on the subsequentedly queued getMostRecentlyUsed promise to settle. Note that skipping the queue here is correct behavior as queuePromise guarantees that any potentially conflicting changes have already settled before this promise runs\n    delete p[orderId];\n    await localForage.setItem(storageKey, p);\n  });\n}\n\nasync function getAllPendingTransactionDetails() {\n  return queuePromise(storageKey, async () => {\n    return getAllPendingTransactionDetailsSkipQueue();\n  });\n}\n\nexport async function monitorAndSubmitPendingTransactionDetails(attempt = 1) {\n  let nextAttempt = 1; // value of `attempt` to pass to next invocatin of this function. Default to 1 \"attempt\" as this causes the exponential backoff algorithm to be disabled by default, which is what we want, since we only want to exponentially backoff on a network error.\n\n  const allPendingTransactionDetails = Object.entries(await getAllPendingTransactionDetails()); // ie. type is `allPendingTransactionDetails: [orderId, txDetails][]`\n  if (allPendingTransactionDetails.length > 0) {\n    const url = getTransactionDetailsURL();\n    const orderIdForThisPage = parseOrderIdFromTransactionDetailsURL(url);\n    const orderIdAndTxDetails = allPendingTransactionDetails.find(pair => { // WARNING, here, while there may be multiple pending tx details, we are only able to submit at most one tx details because the transaction details POST url is unique to a particular order Id\n      const orderId = pair[0]; // ie. pair type is [orderId, txDetails]\n      return orderId === orderIdForThisPage;\n    });\n    if (orderIdAndTxDetails) {\n      const [orderIdToSubmit, txDetailsToSubmit] = orderIdAndTxDetails;\n      try {\n        const csrf_cookie = getCookie('pretix_csrftoken') || getCookie('__Host-pretix_csrftoken'); // in devserver builds, pretix provides pretix_csrftoken without the __Host- pretix. WARNING here we must use the latest csrf_cookie, it wasn't included in the saved tx details because it might have changed if the user's session changed between the time when tx details were saved and time now when submission occurs\n        const params = {\n          headers: {\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\n            'X-CSRFToken': csrf_cookie,\n          },\n          method: 'POST',\n          mode: 'same-origin',\n          body: new URLSearchParams({\n            ...txDetailsToSubmit,\n            csrfmiddlewaretoken: csrf_cookie,\n          }),\n        };\n        const response = await fetch(url, params);\n        if (response.ok) {\n          showError(' ', false); // clear any error from previous attempts --> the non-empty whitespace string here is essential to avoid a default error message\n          showSuccessMessage(txDetailsToSubmit);\n          await markPendingTransactionDetailsAsSuccessfullySubmitted({ orderId: orderIdToSubmit }); // these txDetails have been successfully submitted to the server, and now we must un-schedule them to prevent any future attempted submission\n          await runPeriodicCheck(); // begin monitoring for the payment being confirmed by the server\n        } else {\n          throw new Error('transaction details submission fetch response not OK');\n        }\n      } catch (error) {\n        showError(`Do not close this window yet! There was an error processing your payment. We will re-try shortly. If this error does not go away, please contact support. Save these details: Your payment was sent in transaction ${txDetailsToSubmit.transactionHash} on ${txDetailsToSubmit.chainName} (chain ID ${txDetailsToSubmit.chainId}). Receipt link ${txDetailsToSubmit.receiptUrl}.`, false);\n        nextAttempt = attempt + 1; // submission POST failed, so we will retry with exponential backoff, where exponential backoff is enabled by incrementing current attempt count\n      }\n    }\n  }\n  const maxBackoff = 15_000; // maximum backoff time in milliseconds (15 seconds)\n  const backoff = Math.min(maxBackoff, Math.pow(2, attempt) * 250); // exponential backoff formula\n  setTimeout(() => monitorAndSubmitPendingTransactionDetails(nextAttempt), backoff); // unconditionally continue monitoring as new tx detaisl for submission may become available or existing pending details may have failed submission\n}\n\n(() => { // begin monitoring for pending transaction details when page loads\n  monitorAndSubmitPendingTransactionDetails();\n})();\n","\"use strict\";\n\n// TODO I really need to adapt modern typescript/linting in this project\n\nimport {\n    GlobalPretixEthState,\n    getPaymentTransactionData,\n    resetErrorMessage,\n    showError\n} from './interface.js';\nimport { addPendingTransactionDetails } from './transactionDetailsBuffer.js';\n\n// TODO doc\nlet singleton3citiesIframeMessageEventHandler = undefined;\nfunction createOrUpdateSingleton3citiesIframeMessageEventHandler({ tcOrigin, onTransactionSigned, onCloseIframe }) {\n    if (singleton3citiesIframeMessageEventHandler) {\n        window.removeEventListener('message', singleton3citiesIframeMessageEventHandler, true);\n        singleton3citiesIframeMessageEventHandler = undefined;\n    }\n\n    singleton3citiesIframeMessageEventHandler = (event) => {\n        if (event.origin === tcOrigin) { // WARNING this is a crucial security check to ensure that this message has been sent from the expected 3cities iframe origin. Otherwise, any window can claim to be sending a message from 3cities\n            if (event !== null && typeof event === 'object' && event.data !== null && typeof event.data === 'object') {\n                if (event.data.kind === 'TransactionSigned') onTransactionSigned(event.data);\n                else if (event.data.kind === 'CloseIframe') onCloseIframe();\n                else if (event.data.kind === 'Checkout') {\n                    // no-op on Checkout event\n                }\n                else console.error(\"Unexpected kind of event from 3cities, kind=\", event.data.kind);\n            } else console.error(\"Unexpected event from 3cities\", event);\n        }\n    };\n    window.addEventListener('message', singleton3citiesIframeMessageEventHandler, true);\n}\n\nfunction make3citiesIframe({\n    tcBaseUrl, // string. 3cities client base URL. TODO enumerate the checkout data that currently must be included in the base url vs. those supplied below as url params\n    receiverAddress, // string address `0x${string}`. Receiver address to which payment will be sent.\n    paymentLogicalAssetAmountInUsd, // string. 18 decimal full precision US Dollar amount due for this payment. Ie. `$1 = (10**18).toString()`\n    primaryCurrency, // string. Primary logical currency in which to denominate this payment (\"USD\", \"ETH\", etc). Currency must be supported by 3cities.\n    usdPerEth, // string decimal number, eg. '4012.56'. USD/ETH rate to use for this payment. 3cities has its own internal exchange rates but they may be overridden, as we are doing here.\n    onTransactionSigned, // callback to invoke on 3cities TransactionSigned event. See below for signature type\n}) {\n    const tcIframeContainerId = \"3cities-iframe-container\";\n\n    createOrUpdateSingleton3citiesIframeMessageEventHandler({\n        tcOrigin: new URL(tcBaseUrl).origin,\n        onTransactionSigned,\n        onCloseIframe: () => { removeElementById(tcIframeContainerId); },\n    })\n\n    // TODO create a real 3cities SDK that configures these options, generates the final 3cities URL, and instantiates/styles the iframe\n\n    // BEGIN - mock 3cities options to later be migrated to SDK\n    // TODO pass ethusd exchange rate to 3cities to override 3cities' own internal exchange rate engine with the user's guaranteed rate determined internally by pretix\n    // TODO set 3cities SDK receiver address from GlobalPretixEthState.paymentDetails['recipient_address'] and also support an optionally distinct receiver address per chain --> WARNING, right now, the configured receiver address in pretix-eth (ie. globalPretixEthState.paymentDetails['recipient_address']) must coincidentally be the same value as the receiver address baked into the 3cities base URL\n    const requireInIframeOrErrorWith = 'Standalone page detected. Please use the \"Click here to pay\" pop-up in Pretix'; // require 3cities to be embedded as an iframe by way of refusing to proceed with payment unless a parent window is detected. For pretix-eth, this prevents payments from occurring in a context where the pretix web client ends up not being the parent window and thus can't receive the user's signature and transaction details via window.parent.postMessage. For example, some wallet connection libraries can cause the 3cities iframe to be opened in a new browser; instead, the user should open the pretix web app in the new browser --> TODO instead of just error msg, optionally allow a redirect URL (\"You need to pay inside Pretix. Redirecting you automatically back to pretex... click here if it doesn't happen\")\n    const iframeParentWindowOrigin = window.location.origin; // iff defined, if 3cities calls window.parent.postMessage, then 3cities will require that the window receiving the message has this origin. In practice, this means that only this window may receive the user's signature and transaction details when 3cities calls postMessage\n    const authenticateSenderAddress = { // iff this config object is defined, 3cities will ask the user for a CAIP-222-style signature to authenticate their ownership of the connected wallet address prior to checking out. This signature can then be obtained from the 3cities iframe by way of window.parent.postMessage and, in future, via webhooks and/or redirect URL params\n        verifyEip1271Signature: true, // iff this is true, 3cities will attempt to detect if the user's conected address is a smart contract wallet, and if this is detected, 3cities will verify the eip1271 signature by requiring an isValidSignature call to return true before allowing payment to proceed. While this clientside call to isValidSignature is insecure from the point of view of the serverside verifier, in practice, this can help prevent a user from paying with a wallet whose ownership signature can't later be verified by the serverside verifier. If user's connected address is a counterfactually instantiated smart contract wallet, then it'll appear to be an EOA to the 3cities iframe and this verification will be skipped prior to payment. However, after payment, the serverside verifier may optionally detect this address as a smart contract wallet and verify the eip1271 signature at that point --> WARNING 3cities does not actually perform this verification yet\n    };\n    const clickToCloseIframeLabel = 'Return to Ticket Shop'; // If this is defined as a string, upon successful checkout, 3cities will present the user with a button to close the iframe, and this button's label will be this string value. If undefined, 3cities's default behavior upon successful checkout is to show a QR code with the payment receipt, and the user can still close the iframe by clicking the X in the corner or anywhere outside the iframe. Note that iframes can't close themselves, see CloseIframe handler here.\n    const requireNativeTokenTransferProxy = true; // iff this is true, 3cities will route any native token transfers through a proxy that emits an ERC20-compliant Transfer event. This must be true for the offchain verifier to detect and successfully verify ETH payments\n    // END - mock 3cities options to later be migrated to SDK\n\n    const computedThreeCitiesUrl = (() => {\n        // today, tcBaseUrl is expected to be of the form `#/?pay=...` ie. having synthetic URL parameters as part of the hash fragment. As a result, we can't use the browser URL API to append search parameters as this api isn't designed to recognize our synthetic search parameters in the hash fragment. Instead, we apply new search params using array-based string manipulation:\n        const urlParts = [tcBaseUrl];\n        urlParts.push(`&receiverAddress=${encodeURIComponent(receiverAddress)}`);\n        urlParts.push(`&amount=${encodeURIComponent(paymentLogicalAssetAmountInUsd)}`);\n        urlParts.push(`&currency=${encodeURIComponent(primaryCurrency)}`);\n        urlParts.push(`&usdPerEth=${encodeURIComponent(usdPerEth)}`);\n        if (requireInIframeOrErrorWith) urlParts.push(`&requireInIframeOrErrorWith=${encodeURIComponent(requireInIframeOrErrorWith)}`);\n        if (iframeParentWindowOrigin) urlParts.push(`&iframeParentWindowOrigin=${encodeURIComponent(iframeParentWindowOrigin)}`)\n        if (authenticateSenderAddress) {\n            urlParts.push('&authenticateSenderAddress=1');\n            if (authenticateSenderAddress.verifyEip1271Signature) urlParts.push('&verifyEip1271Signature=1');\n        }\n        if (clickToCloseIframeLabel) urlParts.push(`&clickToCloseIframeLabel=${encodeURIComponent(clickToCloseIframeLabel)}`);\n        if (requireNativeTokenTransferProxy) urlParts.push('&requireNativeTokenTransferProxy=1');\n        const url = urlParts.join('');\n        return url;\n    })();\n    makeIframeModal(tcIframeContainerId, computedThreeCitiesUrl);\n\n    function removeElementById(id) {\n        const el = document.getElementById(id);\n        if (el) el.remove();\n    }\n\n    function makeIframeModal(iframeContainerId, url) {\n        // WARNING this unreadable code is a 1-liner generated by 3cities \"HTML embed\" feature and is intended to be a temporary solution for an iframe modal. TODO replace this with an iframe created internally in a real 3cities SDK\n        (function () { let m = document.createElement('div'); m.id = iframeContainerId; m.style = 'position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,0.5);z-index:9999;display:flex;align-items:center;justify-content:center;'; m.onclick = function (e) { if (e.target === m) { removeModal(); } }; let removeModal = function () { if (document.body.contains(m)) { document.body.removeChild(m); document.removeEventListener('keydown', escListener); } }; let escListener = function (e) { if (e.key === 'Escape') { removeModal(); } }; document.addEventListener('keydown', escListener); let mc = document.createElement('div'); let maxWidth = window.innerWidth < 481 ? (window.innerWidth - 30) + 'px' : '451px' /* WARNING 3cities's responsive design breakpoint for mobile/small screens is 435px. This means that if 3cities's width is >= 435px, it'll be displayed in desktop mode. Here we set max width to 451px because 435px 3cities width + 8px padding on left/right = 451px and we want the modal pop-up to be displayed in desktop mode (on desktop) so that the UI elements specific to desktop are included in the payment UX, such as changing the colors of buttons when the mouse hovers over them */; mc.style = 'background-color:#f1f1f1;padding:8px;width:100%;max-width:' + maxWidth + ';height:95vh;max-height:1024px;border-radius:10px;position:relative;box-shadow:0 4px 6px rgba(0,0,0,0.1), 0 2px 4px rgba(0,0,0,0.06);margin:auto;'; let i = document.createElement('iframe'); i.allow = 'clipboard-write' /* allow writing to the OS clipboard inside the iframe, eg. to copy walletconnect code */; i.style = 'width:100%;height:100%;border:0;'; i.src = url; let c = document.createElement('div'); c.style = 'position:absolute;top:5px;right:5px;width:24px;height:24px;cursor:pointer;z-index:10;'; c.innerHTML = '<svg xmlns=\\'http://www.w3.org/2000/svg\\' viewBox=\\'0 0 20 20\\' fill=\\'currentColor\\' style=\\'width:100%;height:100%;\\'><path fill-rule=\\'evenodd\\' clip-rule=\\'evenodd\\' d=\\'M10 9.293l5.146-5.147a.5.5 0 01.708.708L10.707 10l5.147 5.146a.5.5 0 01-.708.708L10 10.707l-5.146 5.147a.5.5 0 01-.708-.708L9.293 10 4.146 4.854a.5.5 0 11.708-.708L10 9.293z\\'></path></svg>'; c.onclick = function () { removeModal(); }; mc.appendChild(i); mc.appendChild(c); m.appendChild(mc); document.body.appendChild(m); })();\n    }\n}\n\n// TODO doc\nasync function makePayment() {\n    async function _tryToStartPaymentFlow() {\n        // refresh paymentDetails in case account has changed\n        GlobalPretixEthState.paymentDetails = await getPaymentTransactionData(true);\n\n        if (GlobalPretixEthState.paymentDetails['is_signature_submitted'] === true) {\n            showError(\"It seems that you have paid for this order already.\");\n            return;\n        }\n\n        // WARNING the value 'has_other_unpaid_orders' is true iff the user's sender address has signed messages for other unpaid orders (see retrieve() in views.py). However, with 3cities, we aren't able to construct this value because the user's sender address is hidden inside the iframe (and not yet connected at this point in the payment flow). So, this check has been dropped. TODO what's the impact here? --> rm this code?\n        // if (GlobalPretixEthState.paymentDetails['has_other_unpaid_orders'] === true) {\n        //     showError(\"Please wait for other payments from your wallet to be confirmed before submitting another transaction.\")\n        //     return;\n        // }\n\n        make3citiesIframe({\n            tcBaseUrl: 'https://3cities.xyz/#/pay?c=CAESFGdAb29187sroN7d8mdtO6b1XHAPIgICASoCARA6DEVUSCBXRVRIIERBSUowAQoBAAoEAgEGAQoIBAUDCgUDBAMFAgoHBwcHBwcHCgUJAQQECggBBAUHCgMEBAQD', // this is a production payment link with baked in settings: single receiver address 0x67406f6F75F3Bb2bA0DeDdf2676D3bA6F55C700F; chain allowlist: Ethereum Mainnet, OP Mainnet, Arbitrum One, Scroll, Linea, Zora, Base, Blast, Mode; TODO add zkSync Era after multi receiver address is implemented and Taiko; TODO add Polygon zkEVM after the payment bugs on it are fixed; token allowlist: ETH, WETH, DAI; TODO add USDC, USDT, LUSD, USDP, PYUSD, GUSD after legal approval; TODO add USDGLO to 3cities --> TODO pass chain/token allowlist as URL params sourced from plugin config\n            receiverAddress: GlobalPretixEthState.paymentDetails['recipient_address'],\n            paymentLogicalAssetAmountInUsd: GlobalPretixEthState.paymentDetails['amount'],\n            primaryCurrency: GlobalPretixEthState.paymentDetails['primary_currency'],\n            usdPerEth: GlobalPretixEthState.paymentDetails['usd_per_eth'],\n            onTransactionSigned: scheduleTransactionDetailsForServerSubmission,\n        });\n    }\n\n    resetErrorMessage();\n\n    try {\n        await _tryToStartPaymentFlow();\n    } catch (error) {\n        console.error('Pay flow error:', error);\n        showError(error, true);\n    }\n}\n\nasync function scheduleTransactionDetailsForServerSubmission(transactionDetailsFrom3cities) {\n    /*\n    NB type of message sent from 3cities upon transaction signed:\n    {\n        kind: 'TransactionSigned';\n        signature: `0x${string}` | `eip1271-chainId-${number}`; // a successfully collected Caip222-style signature. `0x${string}` indicates an ordinary signature. `eip1271-chainId-${number}` indicates a smart contract wallet verified the message using eip1271 verification via a isValidSignature call on the provided chainId;\n        message: {\n            senderAddress: `0x${string}`;\n        };\n        transactionHash: string;\n        chainId: number;\n        // ... more insecure fields for admin convenience\n    }\n    */\n\n    const td = transactionDetailsFrom3cities;\n    const transactionDetailsUrlSearchParams = { // WARNING this object will be passed as a literal into the URLSearchParams constructor, so all values must be compatible with URLSearchParams\n        // NB `csrfmiddlewaretoken: csrf_cookie,` will be added later by submission algorithm\n        senderAddress: td.caip222StyleMessageThatWasSigned.senderAddress, // we extract senderAddress and send it separately because the backend wants senderAddress as structured data but the type of `message` is opaque to the backend (ie. the backend treats its received `message` as a blob)\n        signature: td.caip222StyleSignature,\n        message: JSON.stringify(td.caip222StyleMessageThatWasSigned),\n        transactionHash: td.transactionHash,\n        chainId: td.chainId,\n        tokenTicker: td.tokenTicker,\n        tokenName: td.tokenName,\n        tokenAmount: td.tokenAmount,\n        tokenDecimals: td.tokenDecimals,\n    };\n    const usp = transactionDetailsUrlSearchParams;\n    // Some fields may be undefined and if so should be excluded:\n    if (typeof td.receiptUrl !== 'undefined') usp.receiptUrl = td.receiptUrl;\n    if (typeof td.tokenCurrency !== 'undefined') usp.tokenCurrency = td.tokenCurrency;\n    if (typeof td.tokenContractAddress !== 'undefined') usp.tokenContractAddress = td.tokenContractAddress;\n    if (typeof td.chainName !== 'undefined') usp.chainName = td.chainName;\n    if (typeof td.isTestnet !== 'undefined') usp.isTestnet = td.isTestnet;\n\n    try {\n        await addPendingTransactionDetails({ transactionDetailsUrlSearchParams: usp });\n    } catch (error) {\n        showError(`!!! Critical error: payment was sent but details were lost. Please email these details to support: ${JSON.stringify(usp)} Error: ${error}`, true);\n    }\n}\n\nexport { makePayment };\n","\"use strict\";\n\n// TODO rename this file to something-not-web3modal\n\nimport { makePayment } from './core.js';\n\nasync function init() {\n    document.title = 'Pretix Payment'; // some wallets read the page title and presents it to the user in the wallet - the pretix generated one looks confusing, so we override it\n    document.getElementById('spinner').style.display = 'none';\n    const payButton = document.getElementById('btn-pay');\n    if (payButton) payButton.addEventListener('click', makePayment);\n    else console.error('No pay button found');\n}\n\ninit();\n"],"names":["module","exports","e","t","n","r","s","o","u","i","f","Error","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","data","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","postMessage","queue","oldQueue","len","task","push","this","g","self","window","immediate","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","reject","resolve","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","result","tryCatch","status","out","prototype","constructor","error","reason","all","iterable","Object","toString","values","Array","resolved","allResolver","outValue","race","response","_typeof","Symbol","iterator","idb","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","getIDB","createBlob","parts","properties","Blob","name","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","Uint8Array","charCodeAt","_checkBlobSupport","txn","transaction","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","navigator","userAgent","match","matchedEdge","parseInt","_checkBlobSupportWithoutCaching","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","forages","db","close","dbArgs","version","openreq","open","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_decodeBlob","encodedBlob","atob","_isEncodedBlob","__local_forage_encoded_blob","_fullyReady","_initReady","_dbInfo","createTransaction","mode","retries","undefined","tx","forage","_tryReconnect","asyncStorage","_driver","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","_support","isSafari","openDatabase","test","platform","hasFetch","fetch","indexOf","IDBKeyRange","isIndexedDBValid","iterate","req","openCursor","iterationNumber","cursor","getItem","get","setItem","blobSupport","reader","FileReader","onloadend","base64","btoa","readAsBinaryString","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","BASE_CHARS","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","localforageSerializer","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","SERIALIZED_MARKER_LENGTH","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","createDbTable","executeSql","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","_setItem","retriesLeft","originalValue","serializer","sqlError","QUOTA_ERR","webSQLStorage","dbInfoPromise","description","size","item","c","storeNames","getAllStoreNames","operationInfo","dropTable","operations","_getKeyPrefix","defaultConfig","keyPrefix","_isLocalStorageUsable","localStorageTestKey","localStorage","checkIfLocalStorageThrows","localStorageWrapper","isLocalStorageValid","keyPrefixLength","itemKey","includes","array","searchElement","x","y","isNaN","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","instance","Constructor","_classCallCheck","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","configureMissingMethods","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","oldDriverSetDone","currentDriverIndex","driverPromiseLoop","initDriver","supports","libraryMethodsAndProperties","createInstance","localforage_js","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","__esModule","d","a","definition","defineProperty","enumerable","globalThis","Function","prop","GlobalPretixEthState","paymentDetails","transactionHashSubmitted","lastOrderStatus","elements","divError","getElementById","divSuccess","divTransactionHash","aOrderDetailURL","buttonPay","submittedTransactionHash","selectors","paymentSteps","querySelectorAll","getTransactionDetailsURL","getAttribute","getCookie","cookies","decodeURIComponent","cookie","split","trim","showError","message","reset_state","innerHTML","displayOnlyId","removeAttribute","divId","forEach","div","id","style","display","async","periodicCheck","url","csrf_cookie","headers","ok","json","location","reload","__awaiter","thisArg","_arguments","P","generator","fulfilled","step","next","rejected","done","__generator","body","_","label","sent","trys","ops","verb","v","op","mostRecentPromiseInProgressPerKey","queuePromise","thunk","mrp","_this","_a","finally","catch","parseOrderIdFromTransactionDetailsURL","storageKey","getAllPendingTransactionDetailsSkipQueue","singleton3citiesIframeMessageEventHandler","makePayment","refresh","getPaymentTransactionData","tcBaseUrl","receiverAddress","paymentLogicalAssetAmountInUsd","primaryCurrency","usdPerEth","onTransactionSigned","tcIframeContainerId","tcOrigin","onCloseIframe","removeEventListener","event","origin","kind","addEventListener","createOrUpdateSingleton3citiesIframeMessageEventHandler","URL","el","remove","removeElementById","requireInIframeOrErrorWith","iframeParentWindowOrigin","authenticateSenderAddress","verifyEip1271Signature","clickToCloseIframeLabel","computedThreeCitiesUrl","urlParts","encodeURIComponent","join","iframeContainerId","m","onclick","removeModal","escListener","mc","maxWidth","innerWidth","allow","src","make3citiesIframe","scheduleTransactionDetailsForServerSubmission","_tryToStartPaymentFlow","transactionDetailsFrom3cities","td","usp","senderAddress","caip222StyleMessageThatWasSigned","signature","caip222StyleSignature","transactionHash","chainId","tokenTicker","tokenName","tokenAmount","tokenDecimals","receiptUrl","tokenCurrency","tokenContractAddress","chainName","isTestnet","transactionDetailsUrlSearchParams","addPendingTransactionDetails","monitorAndSubmitPendingTransactionDetails","attempt","nextAttempt","allPendingTransactionDetails","entries","getAllPendingTransactionDetails","orderIdForThisPage","orderIdAndTxDetails","find","pair","orderIdToSubmit","txDetailsToSubmit","params","method","URLSearchParams","csrfmiddlewaretoken","orderId","markPendingTransactionDetailsAsSuccessfullySubmitted","runPeriodicCheck","backoff","Math","min","pow","title","payButton","init"],"sourceRoot":""}